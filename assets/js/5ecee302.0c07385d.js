"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[8359],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),s=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),h=s(n),u=r,f=h["".concat(l,".").concat(u)]||h[u]||d[u]||a;return n?i.createElement(f,o(o({ref:t},p),{},{components:n})):i.createElement(f,o({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},77498:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return h}});var i=n(87462),r=n(63366),a=(n(67294),n(3905)),o=["components"],c={id:"pairing",title:"Pairing authentication",sidebar_label:"Pairing authentication"},l=void 0,s={unversionedId:"platform/firefox-accounts/pairing",id:"platform/firefox-accounts/pairing",title:"Pairing authentication",description:"Overview",source:"@site/docs/platform/firefox-accounts/pairing.md",sourceDirName:"platform/firefox-accounts",slug:"/platform/firefox-accounts/pairing",permalink:"/ecosystem-platform/platform/firefox-accounts/pairing",editUrl:"https://github.com/mozilla/ecosystem-platform/edit/master/docs/platform/firefox-accounts/pairing.md",tags:[],version:"current",frontMatter:{id:"pairing",title:"Pairing authentication",sidebar_label:"Pairing authentication"},sidebar:"docs",previous:{title:"Integration with FxA",permalink:"/ecosystem-platform/platform/firefox-accounts/integration-with-fxa"},next:{title:"Overview",permalink:"/ecosystem-platform/platform/sub-plat/sub-plat-overview"}},p=[{value:"Overview",id:"overview",children:[],level:2},{value:"User Flow",id:"user-flow",children:[],level:2},{value:"Implementation",id:"implementation",children:[{value:"High-level description of the flow",id:"high-level-description-of-the-flow",children:[],level:3},{value:"Detailed implementation description",id:"detailed-implementation-description",children:[],level:3},{value:"Where does the code live?",id:"where-does-the-code-live",children:[],level:3}],level:2},{value:"Security concerns and desired security properties",id:"security-concerns-and-desired-security-properties",children:[],level:2},{value:"Possible evolutions",id:"possible-evolutions",children:[],level:2}],d={toc:p};function h(e){var t=e.components,c=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},d,c,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,'A Firefox Account user can connect a new device to their account without entering a password,\nby instead "pairing" with an already-connected device in order to obtain account credentials.'),(0,a.kt)("p",null,"Currently, the pairing implementation is limited to a mobile device (Firefox Android and iOS) scanning a QR code displayed on a computer (Firefox Desktop) already connected to a Firefox Account. We hope to expand these capabilities in future."),(0,a.kt)("h2",{id:"user-flow"},"User Flow"),(0,a.kt)("p",null,"Let's assume that the user is already signed-in to their Desktop Firefox profile."),(0,a.kt)("p",null,"On their mobile device, Firefox invites them to navigate to firefox.com/pair on their Desktop browser,\nand offers to scan the QR code which will be generated by that device. Like this:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"The Firefox Mobile pairing screen",src:n(77892).Z})),(0,a.kt)("p",null,"When they visit that URL on their Desktop device, it will confirm their intent to connect\nanother device, and then generate and display a QR code. Like this:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"The Firefox Desktop pairing screen",src:n(19444).Z})),(0,a.kt)("p",null,"When the user scans the QR code, each device will show a confirmation screen,\nand after user approval the new device will be connected to their account."),(0,a.kt)("p",null,"A detailed technical user-flow is available ",(0,a.kt)("a",{parentName:"p",href:"https://lucid.app/lucidchart/9a420c19-1e92-42a5-8eae-908a442c1044/edit?page=0"},"here"),"."),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("h3",{id:"high-level-description-of-the-flow"},"High-level description of the flow"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The two devices exchange a one-time secret key via QR code, and use it to create\na shared, encrypted and authenticated communication channel over websockets.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/mozilla-services/channelserver"},"Channel Server")," is responsible\nfor proxying communication between the two devices."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/mozilla/fxa-pairing-channel"},"Pairing Channel library")," provides the\ncrypto necessary to authenticate and encrypt the channel, using TLS1.3 in pre-shared-key mode."),(0,a.kt)("li",{parentName:"ul"},"The Desktop device is responsible for creating the channel and its corresponding secret key,\nand advertising those details in a QR code."),(0,a.kt)("li",{parentName:"ul"},"The Mobile device connects to the channel using the details it scans from the QR code."))),(0,a.kt)("li",{parentName:"ol"},"The Mobile device prepares an OAuth request for connecting to FxA, but instead of redirecting\nto a webpage on ",(0,a.kt)("a",{parentName:"li",href:"https://accounts.firefox.com"},"https://accounts.firefox.com"),", it sends the OAuth request to the Desktop device\nover the pairing channel."),(0,a.kt)("li",{parentName:"ol"},"The Desktop device receives the OAuth request, confirms user consent, and uses its existing\ncredentials to tell the FxA server to grant a corresponding OAuth authorization code. Instead\nof delivering the code via the usual OAuth HTTP redirect, it sends the code back to the Mobile device over the pairing channel."),(0,a.kt)("li",{parentName:"ol"},"The Mobile device receives the code and processes it just as it would for an ordinary\nweb-based OAuth flow, by talking to the FxA server to exchange the code for some OAuth tokens.")),(0,a.kt)("p",null,'There is some additional message-passing the takes place over the pairing channel in order to\nshow confirmation screens and help smooth out the experience, but the high-level abstraction\nis "do an OAuth flow, but using the pairing channel instead of HTTP redirects".'),(0,a.kt)("h3",{id:"detailed-implementation-description"},"Detailed implementation description"),(0,a.kt)("p",null,"The implementation is described ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/main/packages/fxa-content-server/docs/pairing-architecture.md"},"here"),"."),(0,a.kt)("p",null,"Please note that the ",(0,a.kt)("a",{parentName:"p",href:"https://lucid.app/lucidchart/1bc1b604-0047-4542-8827-ed8518b0433e/edit?page=0"},"FxA Pairing Flow - Application Layer")," Lucidchart diagram should be treated as the ",(0,a.kt)("strong",{parentName:"p"},"source of truth"),"\nregarding the pairing protocol and kept up-to-date. There is also a rendered png of the diagram available on the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/main/packages/fxa-content-server/docs/pairing-architecture.md#detailed-flow"},"detailed architecture docs"),"."),(0,a.kt)("h3",{id:"where-does-the-code-live"},"Where does the code live?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mozilla-services/channelserver"},"Channel Server")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mozilla/fxa-pairing-channel"},"Pairing Channel")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://searchfox.org/mozilla-central/rev/23c25cd32a1e87095301273937b4ee162f41e860/services/fxaccounts/FxAccountsPairing.jsm"},"Desktop client implementation")," (",(0,a.kt)("a",{parentName:"li",href:"https://searchfox.org/mozilla-central/rev/23c25cd32a1e87095301273937b4ee162f41e860/browser/components/preferences/fxaPairDevice.js"},"UI"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mozilla/application-services/blob/40bef1314d9cf20fdfa8e1c1539a5205c4bdd462/components/fxa-client/src/oauth.rs#L111-L136"},"Mobile client implementation")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mozilla/fxa/blob/44bbb161d958f084c1bb39902554f69a2333de90/packages/fxa-content-server/app/scripts/models/pairing/supplicant-state-machine.js"},"Content server implementation"))),(0,a.kt)("h2",{id:"security-concerns-and-desired-security-properties"},"Security concerns and desired security properties"),(0,a.kt)("p",null,"Described ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/main/packages/fxa-content-server/docs/pairing-architecture.md#intended-security-properties"},"here"),"."),(0,a.kt)("h2",{id:"possible-evolutions"},"Possible evolutions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Reverse pairing: allow a computer to connect to an account by scanning a QR code with an already connected mobile Firefox."),(0,a.kt)("li",{parentName:"ul"},"Pairing using a code to type: more accessible, allows device without a back camera to pair (i.e. 2 computers).")))}h.isMDXComponent=!0},19444:function(e,t,n){t.Z=n.p+"assets/images/fxa-pairing-desktop-78a4f013872dc35572a01fa0de2a6748.png"},77892:function(e,t,n){t.Z=n.p+"assets/images/fxa-pairing-mobile-27675340d53bf99d9201749169a5dfb6.png"}}]);