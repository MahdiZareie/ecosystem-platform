"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[4682],{16181:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>p,Details:()=>g,SpecifiedBy:()=>c,assets:()=>d,contentTitle:()=>n,default:()=>b,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var s=a(87462),r=a(67294),i=a(3905);a(8209);const o={id:"product-id",title:"productId",hide_table_of_contents:!1},n=void 0,l={unversionedId:"gql-api/subscriptions/product-id",id:"gql-api/subscriptions/product-id",title:"productId",description:"No description",source:"@site/docs/gql-api/subscriptions/product-id.mdx",sourceDirName:"gql-api/subscriptions",slug:"/gql-api/subscriptions/product-id",permalink:"/ecosystem-platform/gql-api/subscriptions/product-id",draft:!1,editUrl:"https://github.com/mozilla/ecosystem-platform/edit/master/docs/gql-api/subscriptions/product-id.mdx",tags:[],version:"current",frontMatter:{id:"product-id",title:"productId",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"planId",permalink:"/ecosystem-platform/gql-api/subscriptions/plan-id"},next:{title:"productName",permalink:"/ecosystem-platform/gql-api/subscriptions/product-name"}},d={},p=()=>(0,i.kt)(r.Fragment,null,(0,i.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),c=e=>(0,i.kt)(r.Fragment,null,"Specification",(0,i.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,i.kt)(r.Fragment,null,(0,i.kt)("span",{className:e.class},e.text)),m=[{value:"Type",id:"type",level:3},{value:'<code>String</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"string-",level:4}],g=e=>{let{dataOpen:t,dataClose:a,children:o,startOpen:n=!1}=e;const[l,d]=(0,r.useState)(n);return(0,i.kt)("details",(0,s.Z)({},l?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,i.kt)("summary",{onClick:e=>{e.preventDefault(),d((e=>!e))},style:{listStyle:"none"}},l?t:a),l&&o)},f={Bullet:p,SpecifiedBy:c,Badge:u,toc:m,Details:g},k="wrapper";function b(e){let{components:t,...a}=e;return(0,i.kt)(k,(0,s.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"No description"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"productId: String!\n")),(0,i.kt)("h3",{id:"type"},"Type"),(0,i.kt)("h4",{id:"string-"},(0,i.kt)("a",{parentName:"h4",href:"/gql-api/scalars/string"},(0,i.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,i.kt)(u,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"String")," scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.")))}b.isMDXComponent=!0}}]);