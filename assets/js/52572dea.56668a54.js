(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[6704],{13255:function(e,t,a){"use strict";a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m}});var n=a(83117),r=a(80102),i=(a(67294),a(3905)),s=a(93456),o=["components"],l={title:"Content-server architecture"},c=void 0,p={unversionedId:"explanation/content-server-architecture",id:"explanation/content-server-architecture",title:"Content-server architecture",description:"Current as of Jan 20th, 2020",source:"@site/docs/explanation/content-server-architecture.md",sourceDirName:"explanation",slug:"/explanation/content-server-architecture",permalink:"/ecosystem-platform/explanation/content-server-architecture",draft:!1,editUrl:"https://github.com/mozilla/ecosystem-platform/edit/master/docs/explanation/content-server-architecture.md",tags:[],version:"current",frontMatter:{title:"Content-server architecture"},sidebar:"docs",previous:{title:"Scoped Keys",permalink:"/ecosystem-platform/explanation/scoped-keys"},next:{title:"Session Tokens",permalink:"/ecosystem-platform/explanation/session-tokens"}},d={},m=[{value:"Document purpose",id:"document-purpose",level:2},{value:"Helpful to know before starting",id:"helpful-to-know-before-starting",level:2},{value:"Relying Party Integrations",id:"relying-party-integrations",level:3},{value:"Content server architecture basics",id:"content-server-architecture-basics",level:2},{value:"High Level Web Client Components",id:"high-level-web-client-components",level:2},{value:"Auth-Brokers",id:"auth-brokers",level:3},{value:"Auth Broker implementations",id:"auth-broker-implementations",level:4},{value:"Channels",id:"channels",level:3},{value:"Reliers",id:"reliers",level:3},{value:"User",id:"user",level:3},{value:"Account",id:"account",level:3},{value:"Router",id:"router",level:3},{value:"Views",id:"views",level:3},{value:"Templates",id:"templates",level:3},{value:"Clients",id:"clients",level:3},{value:"fxa-js-client",id:"fxa-js-client",level:4},{value:"oauth-client",id:"oauth-client",level:4},{value:"profile-client",id:"profile-client",level:4},{value:"Application lifecycle",id:"application-lifecycle",level:2},{value:"View Deepdive",id:"view-deepdive",level:2},{value:"BaseView",id:"baseview",level:3},{value:"Rendering templates",id:"rendering-templates",level:3},{value:"setInitialContext",id:"setinitialcontext",level:4},{value:"Render lifecycle methods",id:"render-lifecycle-methods",level:4},{value:"FormView",id:"formview",level:3},{value:"Submit lifecycle methods",id:"submit-lifecycle-methods",level:4},{value:"Showing validation errors",id:"showing-validation-errors",level:4},{value:"Mixins",id:"mixins",level:3},{value:"screen-&gt;screen navigation",id:"screen-screen-navigation",level:3},{value:"More useful info",id:"more-useful-info",level:2},{value:"Adding a new route",id:"adding-a-new-route",level:3},{value:"Server errors and error messages",id:"server-errors-and-error-messages",level:3},{value:"Closing FxA and metrics (aka - missing metrics)",id:"closing-fxa-and-metrics-aka---missing-metrics",level:3},{value:"User data stored on device",id:"user-data-stored-on-device",level:3},{value:"Keeping tabs synchronized",id:"keeping-tabs-synchronized",level:3},{value:"Localization",id:"localization",level:3},{value:"Settings",id:"settings",level:2},{value:"Converting to react",id:"converting-to-react",level:2}],h={toc:m};function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Current as of ",(0,i.kt)("inlineCode",{parentName:"p"},"Jan 20th, 2020")),(0,i.kt)("h2",{id:"document-purpose"},"Document purpose"),(0,i.kt)("p",null,"This is a starting point for developers and contributors of the Firefox Accounts Content Server. The content-server\nis responsible for displaying the authentication/authorization and account settings related UI to the user."),(0,i.kt)("h2",{id:"helpful-to-know-before-starting"},"Helpful to know before starting"),(0,i.kt)("p",null,"At a high level, FxA is an ",(0,i.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/6556522/authentication-versus-authorization"},"authentication (authn) and authorization (authz) system"),'. This means a Relying Party (RP) such as Firefox Sync or Send delegates\nthe responsibility for authenticating and authorizing users to Firefox Accounts. Once the user proves their\nidentity to FxA, we return one or more tokens the RP can use to access a "protected resource".\nThe ',(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc6749"},"OAuth 2.0 spec")," does a good job of explaining these concepts."),(0,i.kt)(s.Mermaid,{chart:"sequenceDiagram\n  participant rp as Relying Party\n  participant fxaback as FxA content server backend\n  participant fxaweb as FxA content server UI\n  participant fxaother as Other FxA backend services\n\n  rp--\x3e>fxaback: Authn/Authz request\n  fxaback--\x3e>fxaweb: send UI\n  fxaweb->>fxaweb: user authenticates/authorizes\n  fxaweb--\x3e>fxaother: forward user generated credentials\n  fxaother--\x3e>fxaother: check user generated credentials, generate RP credentials\n  fxaother--\x3e>fxaweb: return RP credentials\n  fxaweb--\x3e>fxaback: send metrics\n  fxaweb--\x3e>rp: send RP credentials",mdxType:"Mermaid"}),(0,i.kt)("p",null,"While FxA is an ",(0,i.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc6749#section-1.1"},"OAuth 2.0 authorization server"),", OAuth is\nonly one of several ",(0,i.kt)("a",{parentName:"p",href:"#relying-party-integrations"},"integration types")," supported by FxA.\nFor more information about how FxA came to support so many non-standard integrations, see the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.google.com/document/d/1jixykayGuyIGU8ecThHvvUpTeC4yq84KRalGr0Jh0xg/"},"App Services and FxA Unofficial History"),"."),(0,i.kt)("p",null,"Detailed ",(0,i.kt)("a",{parentName:"p",href:"./fxa-system-diagrams"},"Maps of the FxA Universe")," outline how the various Firefox Accounts micro-services\nfit together. The ",(0,i.kt)("a",{parentName:"p",href:"./fxa-system-diagrams#fxa-content-server"},"content-server centric view")," will give an understanding\nof which services communicate with FxA."),(0,i.kt)("h3",{id:"relying-party-integrations"},"Relying Party Integrations"),(0,i.kt)("p",null,"The content server architecture was heavily influenced by the number of ways Relying Parties (RPs)\nintegrate with FxA. If portions of the architecture seem byzantine and complex, chances are this is why."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"4 browser environments for Firefox Sync:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Firefox Desktop"),(0,i.kt)("li",{parentName:"ul"},"Firefox for Android (Fennec)"),(0,i.kt)("li",{parentName:"ul"},"Firefox for Android (Fenix)"),(0,i.kt)("li",{parentName:"ul"},"Firefox for iOS"))),(0,i.kt)("li",{parentName:"ul"},"WebExtensions such as Notes and the ",(0,i.kt)("a",{parentName:"li",href:"https://fpn.firefox.com/browser"},'Firefox Private Network "secure proxy" (FPN)')),(0,i.kt)("li",{parentName:"ul"},"OAuth 2.0 such as ",(0,i.kt)("a",{parentName:"li",href:"https://monitor.firefox.com/"},"Monitor")," and ",(0,i.kt)("a",{parentName:"li",href:"https://send.firefox.com/"},"Send")),(0,i.kt)("li",{parentName:"ul"},"Native applications such as the ",(0,i.kt)("a",{parentName:"li",href:"https://fpn.firefox.com/vpn"},"Firefox Private Network VPN")),(0,i.kt)("li",{parentName:"ul"},'"Direct access", i.e., users browsing directly to ',(0,i.kt)("a",{parentName:"li",href:"https://accounts.firefox.com"},"https://accounts.firefox.com"))),(0,i.kt)("h2",{id:"content-server-architecture-basics"},"Content server architecture basics"),(0,i.kt)("p",null,"The content server is comprised of a server and client side components."),(0,i.kt)("p",null,"The server side is responsible for serving static content and ingesting metrics and error\nreports."),(0,i.kt)("p",null,"The client side is a ",(0,i.kt)("a",{parentName:"p",href:"https://backbonejs.org/"},"Backbone")," based Single Page Application (SPA) and responsible for screen rendering,\nhandling user input, communicating with various FxA backend services, and communicating with RPs or browsers.\nThe client app runs in modern Web capable systems, see ",(0,i.kt)("a",{parentName:"p",href:"fxa-dev-process#browser-support"},"supported browsers")," for up to date tier 1 support."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Yes, FxA uses Backbone. React wasn't a thing when FxA started, and converting FxA to use React\nwill be a journey of tears. ",(0,i.kt)("a",{parentName:"p",href:"#converting-to-react"},"Only attempt such a task piece by piece"),"."))),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Our use of Backbone isn't strictly Model-View-Controller (MVC), ours is more like MVVM. We use Models and Views and have models for the Views."))),(0,i.kt)("h2",{id:"high-level-web-client-components"},"High Level Web Client Components"),(0,i.kt)("h3",{id:"auth-brokers"},"Auth-Brokers"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/models/auth_brokers"},"Auth-Brokers")," have two primary responsibilities:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Mediate communication between Firefox Accounts and the RP"),(0,i.kt)("li",{parentName:"ol"},"Screen->screen state machine")),(0,i.kt)("p",null,"To minimize the complexity, each integration type has its own broker so that\ncustomizations can be made without interfering with other brokers."),(0,i.kt)("p",null,"Brokers are made up of a list of capabilities, methods, and behaviors. Brokers can extend exisiting brokers and overwrite\nany of these properites to meet the specification of that integration."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mozilla/fxa/blob/5c527d8007c416b2f6122d8081f7756f8bc6733b/packages/fxa-content-server/app/scripts/models/auth_brokers/base.js#L539:L602"},"capabilities")," can be thought of as feature flags, e.g., ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/mozilla/fxa/blob/5c527d8007c416b2f6122d8081f7756f8bc6733b/packages/fxa-content-server/app/scripts/models/auth_brokers/base.js#L539:L602"},'"does this integration support signup?"'),"  (some versions of Firefox for iOS do not)"),(0,i.kt)("li",{parentName:"ul"},"methods are invoked by views before and after certain events happen, e.g., ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/mozilla/fxa/blob/5c527d8007c416b2f6122d8081f7756f8bc6733b/packages/fxa-content-server/app/scripts/models/auth_brokers/base.js#L270:L279"},(0,i.kt)("inlineCode",{parentName:"a"},"afterSignIn")),' is called after a user signs in and can be used to notify the RP. Methods usually return a "behavior", i.e., "what to do next".'),(0,i.kt)("li",{parentName:"ul"},'behaviors define "what to do next" after a method has completed. For example, ',(0,i.kt)("inlineCode",{parentName:"li"},"afterSignIn")," by default ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/mozilla/fxa/blob/5c527d8007c416b2f6122d8081f7756f8bc6733b/packages/fxa-content-server/app/scripts/models/auth_brokers/base.js#L106"},"sends the user to the /signin_confirmed screen"),".")),(0,i.kt)("p",null,"Brokers communicate with RPs via the URL or a ",(0,i.kt)("a",{parentName:"p",href:"#channels"},"Channel"),"."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"While placing screen->screen transition logic in auth_brokers might seem like an odd choice, this resulted\nin a huge simplification over when complex transition logic was embedded in views. Some screen->screen transitions\ndepend on the integration type, and embedding this logic within the Views resulted in an unmaintainable\nmess. The work to completely remove transition logic from views was never completed, and we have since\nmade many transitions more universal and it may be that we could move some of this logic back into views.\nIt may also be that distinct state machines outside of brokers would have been a better choice."))),(0,i.kt)("h4",{id:"auth-broker-implementations"},"Auth Broker implementations"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Broker"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/88f6119cc75ae75bd26f87cf5e42dc71e95411d4/packages/fxa-content-server/app/scripts/models/auth_brokers/base.js#L6"},"base")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Base broker that other brokers inhiert from.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/9a26577ee493fca55c4fe752fa940bac0286d066/packages/fxa-content-server/app/scripts/models/auth_brokers/fx-desktop-v3.js#L6"},"fx-desktop-v3")),(0,i.kt)("td",{parentName:"tr",align:"center"},"v3 of the Fx Desktop authentication broker, it allows the uid of a user to change if the user's account has been deleted.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/2d5efe1264157e72ccd1ddbfc60d4bb6361a4d7b/packages/fxa-content-server/app/scripts/models/auth_brokers/fx-fennec-v1.js#L15"},"fx-fennec-v1")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Interfaces with Firefox for Android when authenticating for Sync, it communicates with the browser using WebChannels.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/a4f406cddc24478683ef6b8335dfe5423e21a62b/packages/fxa-content-server/app/scripts/models/auth_brokers/fx-ios-v1.js#L7"},"fx-ios-v1")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Interfaces with Sync on Fx for iOS. Uses the same custom protocol as fx-desktop-v1.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/16e58737d95214abe27337bd7ad3bbe07b4da8d2/packages/fxa-content-server/app/scripts/models/auth_brokers/fx-sync.js#L6"},"fx-sync")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Generic broker used to integrate into Sync. This is used as a base class.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/2d5efe1264157e72ccd1ddbfc60d4bb6361a4d7b/packages/fxa-content-server/app/scripts/models/auth_brokers/fx-sync-channel.js#L6"},"fx-sync-channel")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Base broker that communicates with the Firefox browser.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/25f33db4437b980f479911eea36ace35728c00df/packages/fxa-content-server/app/scripts/models/auth_brokers/fx-sync-web-channel.js#L6"},"fx-sync-web-channel")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Variant of Sync broker that communicates via webchannels.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/14543fdcd73d300946b7155c275391072d96e247/packages/fxa-content-server/app/scripts/models/auth_brokers/oauth-redirect.js#L5"},"oauth-redirect")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Oauth broker that finishes oauth flow by redirecting the current window.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/8701348cdd79dbdc9879b2b4a55a23a135a32bc1/packages/fxa-content-server/app/scripts/models/auth_brokers/oauth-redirect-chrome-android.js#L12"},"oauth-redirect-chrome-android")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Created because Chrome for Android will not allow the page to redirect unless its the result of a user action such as a click.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/a4f406cddc24478683ef6b8335dfe5423e21a62b/packages/fxa-content-server/app/scripts/models/auth_brokers/oauth-webchannel-v1.js#L6"},"oauth-webchannel-v1")),(0,i.kt)("td",{parentName:"tr",align:"center"},"WebChannel OAuth broker that speaks 'v1' of the protocol.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/3173773c00c9d777b9c82d76be10f120e79af7b2/packages/fxa-content-server/app/scripts/models/auth_brokers/web.js#L6"},"web")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Auth broker to handle users who browse directly to the site.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/8701348cdd79dbdc9879b2b4a55a23a135a32bc1/packages/fxa-content-server/app/scripts/models/auth_brokers/pairing/authority.js#L5"},"pairing/authority")),(0,i.kt)("td",{parentName:"tr",align:"center"},"Manages the OAuth flow by WebChannel messages to the browser to help with a pairing-based flow.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/fa545b9bc089c15cba6549a3277df45254fc7527/packages/fxa-content-server/app/scripts/models/auth_brokers/pairing/supplicant.js#L11"},"pairing/supplicant")),(0,i.kt)("td",{parentName:"tr",align:"center"},"SupplicantBroker extends OAuthRedirectBroker to provide a redirect behaviour as an OAuth flow.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/mozilla/fxa/blob/25f33db4437b980f479911eea36ace35728c00df/packages/fxa-content-server/app/scripts/models/auth_brokers/pairing/supplicant-webchannel.js#L10"},"pairing/supplicant-webchannel")),(0,i.kt)("td",{parentName:"tr",align:"center"},"SupplicantWebChannelBroker extends OAuthWebChannelBroker to provide a WebChannel flow.")))),(0,i.kt)("h3",{id:"channels"},"Channels"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/lib/channels"},"channel")," is a two way communication mechanism between a RP and Firefox Accounts. The method of communication is channel specific."),(0,i.kt)("p",null,"There are channels to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Communicate between FxA and the browser"),(0,i.kt)("li",{parentName:"ul"},"Communicate between FxA and a WebExtension"),(0,i.kt)("li",{parentName:"ul"},"Communicate between 2 or more FxA tabs")),(0,i.kt)("h3",{id:"reliers"},"Reliers"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/models/reliers"},"Relier")," fetches and holds data about the current RP. A Relier is created on startup and is\na central place to ensure data coming into and out of FxA is safe and well-formed."),(0,i.kt)("p",null,"Three primary types of Relier models exist:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"browser (for Sync integrations)"),(0,i.kt)("li",{parentName:"ol"},"oauth"),(0,i.kt)("li",{parentName:"ol"},"web (called relier)")),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Any long lived data (e.g., email address, uid, client",(0,i.kt)("em",{parentName:"p"},"id), coming from an RP or on the URL\n",(0,i.kt)("strong",{parentName:"em"},"MUST BE")," validated and transformed within Reliers. While it seems natural to ingest and sanitize\ndata in the Views, we are unable to control what users and malicious actors do. Assuming users always\nenter at ",(0,i.kt)("inlineCode",{parentName:"em"},"/"),", or at ",(0,i.kt)("inlineCode",{parentName:"em"},"/complete_sign_up"),", etc, _does not hold"),". To prevent XSS, we would have to validate\nand sanitize long lived data ",(0,i.kt)("em",{parentName:"p"},"on every screen it is used"),", and we saw many cases in the past where we\nforgot to do this. Ingesting and validating the data on startup in the Relier model ensures the data\nis checked once and is ensured to be safe afterwards."))),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The front end could probably be significantly simplified if all query parameter validation logic was moved to the server."))),(0,i.kt)("h3",{id:"user"},"User"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/models/user.js"},"User")," holds and persists data about one or more Accounts as well as keeping track of the currently signed in user."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},'The user model was a premature solution to allow us to have an "account chooser" where a user visiting\na new RP would be able to choose from any of their signed in Accounts. We never implemented this, and the User\nmodel has been a bit of a pain. The model does handle other things, though we could probably move most of its\nresponsibilities elsewhere and simplify the overall architecture.'))),(0,i.kt)("h3",{id:"account"},"Account"),(0,i.kt)("p",null,"An ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/models/account.js"},"Account")," holds data about a given account and provides an API for making updates to the account. The account\nmodel uses the fxa-js-client, fxa-oauth-client, and fxa-profile-client to operate on the account in any way."),(0,i.kt)("h3",{id:"router"},"Router"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/router.js"},"Router")," is responsible for reacting to URL changes and displaying the Views."),(0,i.kt)("h3",{id:"views"},"Views"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/views"},"Views")," represent either an entire screen or a portion of a screen. Views react to user input, and often call\n",(0,i.kt)("a",{parentName:"p",href:"#brokers"},"Broker")," methods to determine where the user should be sent after a successful form submission. Screen\nlevel views are rendered by the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/main/packages/fxa-content-server/app/scripts/views/app.js"},"AppView"),". See ",(0,i.kt)("a",{parentName:"p",href:"#view-deepdive"},"View Deepdive")," for more info."),(0,i.kt)("h3",{id:"templates"},"Templates"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/templates"},"template")," is a serialized HTML representation of a View. A view renders a template using data available to it and writes the rendered template to the DOM. Templates use the ",(0,i.kt)("a",{parentName:"p",href:"http://mustache.github.io/"},"mustache")," template library."),(0,i.kt)("h3",{id:"clients"},"Clients"),(0,i.kt)("p",null,"Communication with external servers are done via client libraries."),(0,i.kt)("h4",{id:"fxa-js-client"},"fxa-js-client"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-js-client"},"fxa-js-client")," communicates with the Firefox Accounts ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-auth-server/"},"Auth Server"),". The fxa-js-client is used for all aspects of authenticating a user - sign up, sign in, password reset, etc."),(0,i.kt)("h4",{id:"oauth-client"},"oauth-client"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/lib/oauth-client.js"},"oauth-client")," used to communicate with the Firefox Accounts OAuth Server and now communicates with the OAuth endpoints on the Auth server. The OAuth client is used to fetch OAuth codes and tokens to send to the RP."),(0,i.kt)("h4",{id:"profile-client"},(0,i.kt)("a",{parentName:"h4",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/lib/profile-client.js"},"profile-client")),(0,i.kt)("p",null,"The profile-client communicates with the Firefox Accounts ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-profile-server/"},"Profile Server"),". This client allows a user to interact with their profile data."),(0,i.kt)("h2",{id:"application-lifecycle"},"Application lifecycle"),(0,i.kt)("p",null,"When the application starts, ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/lib/app-start.js"},"app-start.js")," takes care of setting up system-wide dependencies. app-start immediately determines the integration type and creates the appropriate ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/blob/8561ec3c1d06763f454f4ac7cb8ef142eb0c01b0/app/scripts/lib/app-start.js#L234"},"Broker")," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/blob/8561ec3c1d06763f454f4ac7cb8ef142eb0c01b0/app/scripts/lib/app-start.js#L199"},"Relier"),". The broker is queried to check support of the current integration. If the integration is supported, other models and the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/qfxa/tree/main/packages/fxa-content-server/blob/8561ec3c1d06763f454f4ac7cb8ef142eb0c01b0/app/scripts/lib/app-start.js#L315"},"router")," are created. The router takes over and determines the initial View to display based on the browser's URL. The router creates the View, which in turn writes a template to the DOM. The user interacts with the View, either by filling out a form or clicking on links and buttons. A view can communicate with external servers using clients or via an Account model. Views usually invoke broker methods to determine next steps, which could be to redirect to another view, display a status message, or stop. Upon successful authentication with Firefox Accounts, the broker is notified, which in turn notifies a RP. The RP is responsible for the final fate of the Firefox Accounts tab. In the case of OAuth redirect, FxA redirects to the RP. In the case of Sync or a WebExtension, the tab may be closed automatically, or the user may have to close the tab themselves."),(0,i.kt)("h2",{id:"view-deepdive"},"View Deepdive"),(0,i.kt)("p",null,"View take care of all things UI. Each view has access to several models and libraries, the most commonly used are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#brokers"},"Broker")," (this.broker)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#reliers"},"Relier")," (this.relier)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#user"},"User")," (this.user)")),(0,i.kt)("p",null,"Even though React wasn't a thing, FxA views have their own lifecylce methods\nfor ",(0,i.kt)("a",{parentName:"p",href:"#render-lifecycle-metohds"},"rendering")," and ",(0,i.kt)("a",{parentName:"p",href:"#submit-lifecycle-methods"},"form submission"),"."),(0,i.kt)("h3",{id:"baseview"},"BaseView"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/main/packages/fxa-content-server/app/scripts/views/base.js"},"BaseView")," is the parent of all Views. BaseView is responsible for rendering deciding whether to render a view, and if so, for rendering. BaseView also takes care of status messages, hooking up DOM events, ",(0,i.kt)("a",{parentName:"p",href:"#l10n"},"l10n"),", and logging. BaseView does ",(0,i.kt)("em",{parentName:"p"},"not")," take care of any form handling, for that, see ",(0,i.kt)("a",{parentName:"p",href:"#formview"},"FormView"),"."),(0,i.kt)("h3",{id:"rendering-templates"},"Rendering templates"),(0,i.kt)("h4",{id:"setinitialcontext"},"setInitialContext"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"setInitialContext")," is used to pass data to the Mustache template and is often overridden:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"...\nsetInitialContext(context) {\n  context.set({\n    email: this.getAccount().get('email')\n  });\n},\n...\n")),(0,i.kt)("h4",{id:"render-lifecycle-methods"},"Render lifecycle methods"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"method name"),(0,i.kt)("th",{parentName:"tr",align:null},"purpose"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"beforeRender"),(0,i.kt)("td",{parentName:"tr",align:null},"Called before ",(0,i.kt)("inlineCode",{parentName:"td"},"renderTemplate"),", can return a promise. If resolves to ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),", rendering is aborted, can be used to redirect a user to a different screen if pre-conditions are not met.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"renderTemplate"),(0,i.kt)("td",{parentName:"tr",align:null},"Renders the template with ",(0,i.kt)("a",{parentName:"td",href:"#setinitialcontext"},"context"),". Rarely overridden.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"afterRender"),(0,i.kt)("td",{parentName:"tr",align:null},"Called after ",(0,i.kt)("inlineCode",{parentName:"td"},"renderTemplate"),", can return a promise. If resolves to ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),", view is not displayed, can be used to redirect a user to a different screen if pre-conditions are not met. Often used by mixins to initialize based on elements in view.$el before being added to the DOM.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"afterVisible"),(0,i.kt)("td",{parentName:"tr",align:null},"Called after a screen has been added to the DOM.")))),(0,i.kt)("h3",{id:"formview"},"FormView"),(0,i.kt)("p",null,"Extend from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/5c527d8007c416b2f6122d8081f7756f8bc6733b/packages/fxa-content-server/app/scripts/views/form.js#L1"},"FormView")," for any Views that contain a form that can be submit.\nFormView takes care of several aspects of form submission:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ensure only one form submission can be in flight at a time"),(0,i.kt)("li",{parentName:"ul"},"Form validation"),(0,i.kt)("li",{parentName:"ul"},"Print submit error messages")),(0,i.kt)("h4",{id:"submit-lifecycle-methods"},"Submit lifecycle methods"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"method name"),(0,i.kt)("th",{parentName:"tr",align:null},"purpose"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"isValidStart"),(0,i.kt)("td",{parentName:"tr",align:null},"Perform validation before individual input elements are validated. Return ",(0,i.kt)("inlineCode",{parentName:"td"},"false")," to indicate form is invalid.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"isValidEnd"),(0,i.kt)("td",{parentName:"tr",align:null},"Perform validation after individual input elements are validated. Return ",(0,i.kt)("inlineCode",{parentName:"td"},"false")," to indicate form is invalid.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"showValidationErrorsStart"),(0,i.kt)("td",{parentName:"tr",align:null},"Show validation errors before individual invalid input elements add their tooltips. If a truthy value is returned, no other validation errors are displayed.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"showValidationErrorsEnd"),(0,i.kt)("td",{parentName:"tr",align:null},"Show validation errors after individual invalid input elements add their tooltips.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"beforeSubmit"),(0,i.kt)("td",{parentName:"tr",align:null},"Called if form is valid, before ",(0,i.kt)("inlineCode",{parentName:"td"},"submit"),". Can return a promise. Resolve to ",(0,i.kt)("inlineCode",{parentName:"td"},"false")," to prevent ",(0,i.kt)("inlineCode",{parentName:"td"},"submit")," from being called.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"submit"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"MUST BE OVERRIDDEN")," Do the form submission. Can return a promise. If promise rejects, the error will be displayed as an error message.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"afterSubmit"),(0,i.kt)("td",{parentName:"tr",align:null},"Called after the ",(0,i.kt)("inlineCode",{parentName:"td"},"submit"),". Can be used for cleanup housekeeping.")))),(0,i.kt)("h4",{id:"showing-validation-errors"},"Showing validation errors"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/5c527d8007c416b2f6122d8081f7756f8bc6733b/packages/fxa-content-server/app/scripts/views/form.js#L379"},"showValidationError")," method is used to show validation errors on an individual input element, this is most commonly done in ",(0,i.kt)("inlineCode",{parentName:"p"},"showValidationErrorsStart")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"showValidationErrorsEnd"),"."),(0,i.kt)("h3",{id:"mixins"},"Mixins"),(0,i.kt)("p",null,"The content server front-end relies heavily on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/onsi/cocktail"},"Cocktail based mixins"),'. Mixins enable code extraction into standalone modules that are "mixed into" other modules. Mixins have several purposes within FxA:'),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Share functionality across modules without relying on inheritance."),(0,i.kt)("li",{parentName:"ol"},"Isolate experiment code. If the experiment is deemed a failure,\nremoving the experiment means removing the mixin rather than updating core View logic."),(0,i.kt)("li",{parentName:"ol"},"Isolate related tasks to simplify reasoning.")),(0,i.kt)("p",null,"Method name collision between a mixin and a mixed-in View is allowed and frequently used, understanding ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/onsi/cocktail#but-what-about-collisions"},"Cocktail's collision handling")," is important to avoid any surprises, especially\nrelating to return values."),(0,i.kt)("h3",{id:"screen-screen-navigation"},"screen->screen navigation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"this.navigate('confirm_signin', {\n  // fields here are passed to the next view\n  account: this.getAccount(),\n});\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"confirm_signin")," view can access the data passed from the previous view:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const account = this.model.get('account');\n")),(0,i.kt)("h2",{id:"more-useful-info"},"More useful info"),(0,i.kt)("h3",{id:"adding-a-new-route"},"Adding a new route"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a new View module if needed"),(0,i.kt)("li",{parentName:"ol"},"Add a ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/mozilla/fxa/blob/5c527d8007c416b2f6122d8081f7756f8bc6733b/packages/fxa-content-server/app/scripts/lib/router.js#L98"},"route entry to the frontend")),(0,i.kt)("li",{parentName:"ol"},"Add a ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/mozilla/fxa/blob/5c527d8007c416b2f6122d8081f7756f8bc6733b/packages/fxa-content-server/server/lib/routes/get-frontend.js#L8"},"route entry to the backend")),(0,i.kt)("li",{parentName:"ol"},"Add a ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/mozilla/fxa/blob/5c527d8007c416b2f6122d8081f7756f8bc6733b/packages/fxa-content-server/tests/server/routes.js#L28"},"test to ensure the new route responds with a 200")),(0,i.kt)("li",{parentName:"ol"},"Add some functional tests")),(0,i.kt)("h3",{id:"server-errors-and-error-messages"},"Server errors and error messages"),(0,i.kt)("p",null,"Any time a new error is added ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/82553801812397f6fdbbbb748580ee8319a0a542/packages/fxa-auth-server/lib/error.js#L12"},"to the auth-server"),", a corresponding entry needs to be added ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/82553801812397f6fdbbbb748580ee8319a0a542/packages/fxa-content-server/app/scripts/lib/auth-errors.js#L28"},"to the content server")," to ensure the error text\nis translated."),(0,i.kt)("p",null,"Error messages can be customized depending if it makes sense for a particular context by setting the\n",(0,i.kt)("inlineCode",{parentName:"p"},"forceMessage")," property on an error before display. See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/82553801812397f6fdbbbb748580ee8319a0a542/packages/fxa-content-server/app/scripts/views/mixins/signin-mixin.js#L135:L141"},"this example"),"."),(0,i.kt)("h3",{id:"closing-fxa-and-metrics-aka---missing-metrics"},"Closing FxA and metrics (aka - missing metrics)"),(0,i.kt)("p",null,"When redirecting to an external site, e.g., an OAuth RP, the content server makes its best attempt\nat flushing metrics in an ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/82553801812397f6fdbbbb748580ee8319a0a542/packages/fxa-content-server/app/scripts/lib/metrics.js#L192"},(0,i.kt)("inlineCode",{parentName:"a"},"unload")," handler"),". The problem with depending on ",(0,i.kt)("inlineCode",{parentName:"p"},"unload")," handlers\nis this only works ",(0,i.kt)("em",{parentName:"p"},"some of the time"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"unload")," handler is ignored on iOS, so we have to\nensure metrics are flushed before a redirect happens."),(0,i.kt)("p",null,"A common problem is setting ",(0,i.kt)("inlineCode",{parentName:"p"},"navigator.location.href = url")," from within view code without first\nflushing metrics. Instead of setting ",(0,i.kt)("inlineCode",{parentName:"p"},"location.href"),", call ",(0,i.kt)("inlineCode",{parentName:"p"},"this.navigateAway")," which will ensure\nA common problem is setting ",(0,i.kt)("inlineCode",{parentName:"p"},"navigator.location.href = url")," from within view code.\nmetrics are flushed. ",(0,i.kt)("inlineCode",{parentName:"p"},"href"),"s from anchor elements are automatically handled by the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/fxa/blob/main/packages/fxa-content-server/app/scripts/views/mixins/external-links-mixin.js"},"ExternalLinksMixin"),"."),(0,i.kt)("h3",{id:"user-data-stored-on-device"},"User data stored on device"),(0,i.kt)("p",null,"Some user data is stored in localStorage to smooth out repeated auth requests and ensure consistent\nexperiment choices across users."),(0,i.kt)("p",null,"All FxA related information is keyed with a ",(0,i.kt)("inlineCode",{parentName:"p"},"__fxa_storage.")," prefix."),(0,i.kt)("p",null,"Account data of all users is located under ",(0,i.kt)("inlineCode",{parentName:"p"},"__fxa_storage.accounts"),". The entry\nis an object where the keys are account UIDs and the values are serialized account\ndata."),(0,i.kt)("p",null,"In environments that support the ",(0,i.kt)("inlineCode",{parentName:"p"},"fxaccounts:fxa_status")," WebChannel message,\naccount data stored in localStorage is merged with the ",(0,i.kt)("inlineCode",{parentName:"p"},"signedInUser")," field\nof the ",(0,i.kt)("inlineCode",{parentName:"p"},"fxaccounts:fxa_status")," response."),(0,i.kt)("h3",{id:"keeping-tabs-synchronized"},"Keeping tabs synchronized"),(0,i.kt)("p",null,"If multiple FxA tabs are open, we try to keep tab signin state synchronized as much\nas possible. Whenever the user signs in or out, ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/API/BroadcastChannel"},"BroadcastChannel"),"\nmessages are sent to all other FxA tabs. Whenever another tab receives a message, it responds\nappropriately."),(0,i.kt)("h3",{id:"localization"},"Localization"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"../reference/localization"},"L10n in the content and auth servers"),"."),(0,i.kt)("h2",{id:"settings"},"Settings"),(0,i.kt)("p",null,"Settings is a mess. Run away. ",(0,i.kt)("a",{parentName:"p",href:"#converting-to-react"},"Rewrite this in React"),"."),(0,i.kt)("h2",{id:"converting-to-react"},"Converting to react"),(0,i.kt)("p",null,'There have been rumblings of "let\'s rewrite the whole thing in React!", from me included (Shane). Stepping back,\na ',(0,i.kt)("em",{parentName:"p"},"lot")," of blood, sweat, and tears went into creating the content server, and a ",(0,i.kt)("em",{parentName:"p"},"lot")," of non-obvious gotchas were\nsolved. I'm not against a big rewrite, but doing so needs to be done with eyes wide open. It's going to be hard and\nrequire multiple man-quarters to complete."),(0,i.kt)("p",null,"Conversion to React would primarily clean up the Views, however, Views are only one aspect of the the content-server's\nduties. Much more challenging than the Views are screen->screen transitions depending on the integration type, and\nhandling the myriad ",(0,i.kt)("a",{parentName:"p",href:"#relying-party-integrations"},"integration types"),"."),(0,i.kt)("p",null,"I think a phased approach is possible:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Start with settings, split it off as a standalone app. Even this will be a challenge because settings\nhas many distinct sub-panels and challenging behaviors. However, settings will allow us to learn how to do:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"query param validation"),(0,i.kt)("li",{parentName:"ul"},"session handling"),(0,i.kt)("li",{parentName:"ul"},"account management"),(0,i.kt)("li",{parentName:"ul"},"form submission and input validation"),(0,i.kt)("li",{parentName:"ul"},"communication with the browser"),(0,i.kt)("li",{parentName:"ul"},"l10n"))),(0,i.kt)("li",{parentName:"ul"},"Maybe the password reset flow next since it is fairly self contained."),(0,i.kt)("li",{parentName:"ul"},"Then maybe the signin/signup flows.")))}u.isMDXComponent=!0},11748:function(e,t,a){var n={"./locale":89234,"./locale.js":89234};function r(e){var t=i(e);return a(t)}function i(e){if(!a.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}r.keys=function(){return Object.keys(n)},r.resolve=i,e.exports=r,r.id=11748}}]);