"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[8991],{71306:(t,e,s)=>{s.r(e),s.d(e,{Badge:()=>u,Bullet:()=>c,Details:()=>g,SpecifiedBy:()=>d,assets:()=>p,contentTitle:()=>l,default:()=>b,frontMatter:()=>n,metadata:()=>o,toc:()=>m});var a=s(87462),i=s(67294),r=s(3905);s(8209);const n={id:"status",title:"status",hide_table_of_contents:!1},l=void 0,o={unversionedId:"gql-api/subscriptions/status",id:"gql-api/subscriptions/status",title:"status",description:"No description",source:"@site/docs/gql-api/subscriptions/status.mdx",sourceDirName:"gql-api/subscriptions",slug:"/gql-api/subscriptions/status",permalink:"/ecosystem-platform/gql-api/subscriptions/status",draft:!1,editUrl:"https://github.com/mozilla/ecosystem-platform/edit/master/docs/gql-api/subscriptions/status.mdx",tags:[],version:"current",frontMatter:{id:"status",title:"status",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"productName",permalink:"/ecosystem-platform/gql-api/subscriptions/product-name"},next:{title:"subscriptionId",permalink:"/ecosystem-platform/gql-api/subscriptions/subscription-id"}},p={},c=()=>(0,r.kt)(i.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),d=t=>(0,r.kt)(i.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:t.url,title:"Specified by "+t.url},"\u2398")),u=t=>(0,r.kt)(i.Fragment,null,(0,r.kt)("span",{className:t.class},t.text)),m=[{value:"Type",id:"type",level:3},{value:'<code>String</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"string-",level:4}],g=t=>{let{dataOpen:e,dataClose:s,children:n,startOpen:l=!1}=t;const[o,p]=(0,i.useState)(l);return(0,r.kt)("details",(0,a.Z)({},o?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,r.kt)("summary",{onClick:t=>{t.preventDefault(),p((t=>!t))},style:{listStyle:"none"}},o?e:s),o&&n)},f={Bullet:c,SpecifiedBy:d,Badge:u,toc:m,Details:g},k="wrapper";function b(t){let{components:e,...s}=t;return(0,r.kt)(k,(0,a.Z)({},f,s,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"No description"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"status: String!\n")),(0,r.kt)("h3",{id:"type"},"Type"),(0,r.kt)("h4",{id:"string-"},(0,r.kt)("a",{parentName:"h4",href:"/gql-api/scalars/string"},(0,r.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,r.kt)(u,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.")))}b.isMDXComponent=!0}}]);