"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[9337],{62905:function(e){e.exports=JSON.parse('{"url":"https://api.accounts.firefox.com/swagger.json","spec":{"openapi":"3.0.0","info":{"title":"Firefox Accounts Authentication Server API","version":"0.0.1","description":"[**WARNING**]: This information may not be up-to-date, use it at your own risk. It may be worth verifying information in the source code before acting on anything you read here.\\n\\nThis document provides protocol-level details of the Firefox Accounts auth server API. For a prose description of the client/server protocol and details on how each parameter is derived, see the [**API design document**](https://wiki.mozilla.org/Identity/AttachedServices/KeyServerProtocol). For a reference client implementation, see [**fxa-auth-client**](https://github.com/mozilla/fxa/tree/main/packages/fxa-auth-client).\\n\\n* [Overview](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#overview)\\n  * [URL structure](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#url-structure)\\n  * [Request format](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#request-format)\\n  * [Response format](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#response-format)\\n    * [Defined errors](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#defined-errors)\\n    * [Responses from intermediary servers](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#responses-from-intermediary-servers)\\n  * [Validation](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#validation)\\n* [Back-off protocol](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#back-off-protocol)"},"tags":[{"name":"Account"},{"name":"Devices and Sessions"},{"name":"Emails"},{"name":"Miscellaneous"},{"name":"Oauth"},{"name":"Password"},{"name":"Recovery codes"},{"name":"Recovery key"},{"name":"Security events"},{"name":"Session"},{"name":"Sign"},{"name":"Subscriptions"},{"name":"Third Party Authentication"},{"name":"totp"},{"name":"Unblock codes"},{"name":"Util"}],"paths":{"/.well-known/browserid":{"get":{"summary":"/.well-known/browserid","operationId":"getWellknownBrowserid","tags":["Miscellaneous"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/.well-known/public-keys":{"get":{"summary":"/.well-known/public-keys","operationId":"getWellknownPublickeys","tags":["Miscellaneous"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/account":{"get":{"summary":"/account","operationId":"getAccount","description":"\ud83d\udd12 Authenticated with session token","tags":["Miscellaneous"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model2"}}}}}}},"/authorization":{"get":{"summary":"/authorization","operationId":"getAuthorization","tags":["Miscellaneous"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}},"post":{"summary":"/authorization","operationId":"postAuthorization","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model34"}}}},"tags":["Miscellaneous"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model35"}}}}}}},"/complete_reset_password":{"get":{"summary":"/complete_reset_password","operationId":"getComplete_reset_password","parameters":[{"name":"email","in":"query","required":true,"schema":{"type":"string","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"}},{"name":"code","in":"query","required":true,"schema":{"type":"string","maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"}},{"name":"token","in":"query","required":true,"schema":{"type":"string","maxLength":64,"pattern":"^(?:[a-fA-F0-9]{2})+$"}},{"x-format":{"alphanum":true},"name":"service","in":"query","required":false,"schema":{"type":"string","maxLength":16}},{"name":"redirectTo","in":"query","required":false,"schema":{"type":"string","maxLength":512}}],"tags":["Util"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/jwks":{"get":{"summary":"/jwks","operationId":"getJwks","tags":["Miscellaneous"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/recoveryCodes":{"get":{"summary":"/recoveryCodes","operationId":"getRecoverycodes","description":"\ud83d\udd12 Authenticated with session token\\n\\nReturn new recovery codes while removing old ones.","tags":["Recovery codes"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model3"}}}}}},"put":{"summary":"/recoveryCodes","operationId":"putRecoverycodes","description":"\ud83d\udd12 Authenticated with session token","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model3"}}}},"tags":["Recovery codes"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model135"}}}}}}},"/recovery_emails":{"get":{"summary":"/recovery_emails","operationId":"getRecovery_emails","description":"\ud83d\udd12 Authenticated with session token\\n\\nReturns an array of objects containing details of the email addresses associated with the logged-in user. Currently, the primary email address is always the one from the `accounts` table.","tags":["Emails"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model5"}}}}}}},"/securityEvents":{"get":{"summary":"/securityEvents","operationId":"getSecurityevents","description":"\ud83d\udd12 Authenticated with session token\\n\\nReturns a list of all security events for a signed in account having `account.create`, `account.login`, `account.reset` events.","tags":["Security events"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}},"delete":{"summary":"/securityEvents","operationId":"deleteSecurityevents","description":"\ud83d\udd12 Authenticated with session token\\n\\nDeletes all the security events of a signed in account.","tags":["Security events"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/verify_email":{"get":{"summary":"/verify_email","operationId":"getVerify_email","parameters":[{"name":"code","in":"query","required":true,"schema":{"type":"string","maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"}},{"name":"uid","in":"query","required":true,"schema":{"type":"string","maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"}},{"x-format":{"alphanum":true},"name":"service","in":"query","required":false,"schema":{"type":"string","maxLength":16}},{"name":"redirectTo","in":"query","required":false,"schema":{"type":"string","maxLength":512}}],"tags":["Util"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/account/attached_clients":{"get":{"summary":"/account/attached_clients","operationId":"getAccountAttached_clients","description":"\ud83d\udd12 Authenticated with session token\\n\\nReturns an array listing all the clients connected to the authenticated user\'s account, including devices, OAuth clients, and web sessions.\\n\\nThis endpoint is primarily designed to power the \\"devices and apps\\" view on the user\'s account settings page. Depending on the type of client, it will have at least one and possibly several of the following properties:\\n\\n- `clientId`: The OAuth client_id of the connected application.\\n- `sessionTokenId`: The id of the `sessionToken` held by that client, if any.\\n- `refreshTokenId`: The id of the OAuth `refreshToken` held by that client, if any.\\n- `deviceId`: The id of the client\'s device record, if it has registered one.\\n\\nThese identifiers can be passed to [**/account/attached_client/destroy**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#post-accountattached_clientdestroy) in order to disconnect the client.\\n\\nThis endpoint returns a maximum 500 last used devices and sessions.","parameters":[{"description":"Filter device list to only show devices active since UTC timestamp.","name":"filterIdleDevicesTimestamp","in":"query","required":false,"schema":{"type":"number"}}],"tags":["Devices and Sessions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model7"}}}}}}},"/account/devices":{"get":{"summary":"/account/devices","operationId":"getAccountDevices","description":"\ud83d\udd12 Authenticated with session token or authenticated with OAuth refresh token.\\n\\nReturns an array of registered device objects for the authenticated user.","tags":["Devices and Sessions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model9"}}}}}}},"/account/keys":{"get":{"summary":"/account/keys","operationId":"getAccountKeys","description":"\ud83d\udd12 Authenticated with key fetch token\\n\\nGet the base-16 bundle of encrypted `kA|wrapKb`. The return value must be decrypted with a key derived from `keyFetchToken`, then `wrapKb` must be further decrypted with a key derived from the user\'s password.\\n\\nSince `keyFetchToken` is single-use, this can only be done once per session. Note that `keyFetchToken` is consumed regardless of whether the request succeeds or fails.\\n\\nThis request will fail unless the account\'s email address and current session has been verified.","tags":["Account"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model10"}}}},"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 104` - Unverified account"}}}},"/account/profile":{"get":{"summary":"/account/profile","operationId":"getAccountProfile","description":"\ud83d\udd12 Authenticated with OAuth bearer token or authenticated with session token\\n\\nGet the email and locale of a user.\\n\\nIf an OAuth bearer token is used, the values returned depend on the scopes that the token is authorized for:\\n  - `email` requires `profile:email` scope.\\n  - `locale` requires `profile:locale` scope.\\n  - `authenticationMethods` and `authenticatorAssuranceLevel` require `profile:amr` scope.\\n\\nThe `profile` scope includes all the above sub-scopes.","tags":["Account"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model11"}}}}}}},"/account/sessions":{"get":{"summary":"/account/sessions","operationId":"getAccountSessions","description":"[**DEPRECATED**]: Please use [**/account/attached_clients**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#get-accountattached_clients) instead.\\n\\n\ud83d\udd12 Authenticated with session token.\\n\\nReturns an array of session objects for the authenticated user.","tags":["Devices and Sessions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model13"}}}}},"deprecated":true}},"/account/status":{"get":{"summary":"/account/status","operationId":"getAccountStatus","description":"\ud83d\udd12\ud83d\udd13 Optionally authenticated with session token\\n\\nGets the status of an account.","parameters":[{"name":"uid","in":"query","schema":{"type":"string","minLength":32,"maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"}}],"tags":["Account"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 108` - Missing parameter in request body"}}},"post":{"summary":"/account/status","operationId":"postAccountStatus","description":"Gets the status of an account without exposing user data through query params. This endpoint is rate limited by [**fxa-customs-server**](https://github.com/mozilla/fxa/tree/main/packages/fxa-customs-server).","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model60"}}}},"tags":["Account"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model61"}}}}}}},"/client/{client_id}":{"get":{"summary":"/oauth/client/{client_id}","operationId":"getClientClient_id","parameters":[{"x-constraint":{"length":16},"name":"client_id","in":"path","required":true,"schema":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$"}}],"tags":["Miscellaneous"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model14"}}}}}}},"/recoveryKey/{recoveryKeyId}":{"get":{"summary":"/recoveryKey/{recoveryKeyId}","operationId":"getRecoverykeyRecoverykeyid","description":"\ud83d\udd12 Authenticated with account reset token<br/><br/>Retrieve the account recovery data associated with the given recovery key.","parameters":[{"name":"recoveryKeyId","in":"path","required":true,"schema":{"type":"string","maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"}}],"tags":["Recovery key"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/recovery_email/status":{"get":{"summary":"/recovery_email/status","operationId":"getRecovery_emailStatus","description":"\ud83d\udd12 Authenticated with session token\\n\\nReturns the \'verified\' status for the account\'s recovery email address.\\n\\nCurrently, each account is associated with exactly one email address. This address must be verified before the account can be used (specifically, `POST /certificate/sign` and `GET /account/keys` will return errors until the address is verified). In the future, this may be expanded to include multiple addresses, and/or alternate types of recovery methods (e.g. SMS). A new API will be provided for this extra functionality.\\n\\nThis call is used to determine the current state (verified or unverified) of the account. During account creation, until the address is verified, the agent can poll this method to discover when it should proceed with `POST /certificate/sign` and `GET /account/keys`.","parameters":[{"name":"reason","in":"query","required":false,"schema":{"type":"string","maxLength":16}}],"tags":["Emails"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model15"}}}},"401":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 110` - Invalid authentication token in request signature"}}}},"/session/status":{"get":{"summary":"/session/status","operationId":"getSessionStatus","description":"\ud83d\udd12 Authenticated with session token\\n\\nReturns a success response if the session token is valid.","tags":["Session"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model16"}}}}}}},"/totp/exists":{"get":{"summary":"/totp/exists","operationId":"getTotpExists","description":"\ud83d\udd12 Authenticated with session token\\n\\nChecks to see if the user has a TOTP token.","tags":["totp"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model17"}}}}}}},"/account/device/commands":{"get":{"summary":"/account/device/commands","operationId":"getAccountDeviceCommands","description":"\ud83d\udd12 Authenticated with session token or authenticated with OAuth refresh token.\\n\\nFetches commands enqueued for the current device by prior calls to `/account/devices/invoke_command`. The device can page through the enqueued commands by using the `index` and `limit` parameters.\\n\\nFor more details, see the [**device registration**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/device_registration.md) docs.","parameters":[{"description":"The index of the most recently seen command item. Only commands enqueued after the given index will be returned.","name":"index","in":"query","required":false,"schema":{"type":"number"}},{"description":"The maximum number of commands to return. The default and maximum value for limit is 100.","name":"limit","in":"query","required":false,"schema":{"type":"number","minimum":0,"maximum":100,"default":100}}],"tags":["Devices and Sessions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model19"}}}}}}},"/oauth/client/{client_id}":{"get":{"summary":"/oauth/client/{client_id}","operationId":"getOauthClientClient_id","description":"Retrieve metadata about the specified OAuth client, such as its display name and redirect URI.","parameters":[{"x-constraint":{"length":16},"name":"client_id","in":"path","required":true,"schema":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$"}}],"tags":["Oauth"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model14"}}}}}}},"/oauth/subscriptions/active":{"get":{"summary":"/oauth/subscriptions/active","operationId":"getOauthSubscriptionsActive","description":"\ud83d\udd12 Authenticated with OAuth bearer token\\n\\nReturns a list of active subscriptions for the user.","tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model21"}}}}}}},"/oauth/subscriptions/clients":{"get":{"summary":"/oauth/subscriptions/clients","operationId":"getOauthSubscriptionsClients","tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model23"}}}}}}},"/oauth/subscriptions/plans":{"get":{"summary":"/oauth/subscriptions/plans","operationId":"getOauthSubscriptionsPlans","description":"\ud83d\udd12 Authenticated with OAuth bearer token\\n\\nReturns a list of available subscription plans.","tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model25"}}}}}}},"/oauth/subscriptions/productname":{"get":{"summary":"/oauth/subscriptions/productname","operationId":"getOauthSubscriptionsProductname","parameters":[{"name":"productId","in":"query","required":true,"schema":{"type":"string"}}],"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model26"}}}}}}},"/oauth/support-panel/subscriptions":{"get":{"summary":"/oauth/support-panel/subscriptions","operationId":"getOauthSupportpanelSubscriptions","description":"\ud83d\udd12 Authenticated with support panel secret","parameters":[{"name":"uid","in":"query","required":true,"schema":{"type":"string"}}],"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model29"}}}}}}},"/password/forgot/status":{"get":{"summary":"/password/forgot/status","operationId":"getPasswordForgotStatus","description":"\ud83d\udd12 Authenticated with password forgot token\\n\\nReturns the status of a `passwordForgotToken`. Success responses indicate the token has not yet been consumed. For consumed or expired tokens, an HTTP `401` response with `errno: 110` will be returned.","tags":["Password"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model30"}}}}}}},"/oauth/mozilla-subscriptions/customer/billing-and-subscriptions":{"get":{"summary":"/oauth/mozilla-subscriptions/customer/billing-and-subscriptions","operationId":"getOauthMozillasubscriptionsCustomerBillingandsubscriptions","description":"\ud83d\udd12 Authenticated with OAuth bearer token","tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model31"}}}}}}},"/oauth/subscriptions/invoice/preview-subsequent":{"get":{"summary":"/oauth/subscriptions/invoice/preview-subsequent","operationId":"getOauthSubscriptionsInvoicePreviewsubsequent","tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model33"}}}}}}},"/oauth/subscriptions/iap/plans/{appName}":{"get":{"summary":"/oauth/subscriptions/iap/plans/{appName}","operationId":"getOauthSubscriptionsIapPlansAppname","description":"Returns available plans for In-App Purchase clients.","parameters":[{"name":"appName","in":"path","required":true,"schema":{"type":"string"}}],"tags":["Subscriptions"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/authorized-clients":{"post":{"summary":"/authorized_clients","operationId":"postAuthorizedclients","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model36"}}}},"tags":["Miscellaneous"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model38"}}}}}}},"/destroy":{"post":{"summary":"/destroy","operationId":"postDestroy","parameters":[{"name":"authorization","in":"header","required":false,"schema":{"type":"string","pattern":"^Basic\\\\s+([a-z0-9+\\\\/]+)$"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model39"}}}},"tags":["Miscellaneous"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/get_random_bytes":{"post":{"summary":"/get_random_bytes","operationId":"postGet_random_bytes","description":"Get 32 bytes of random data. This should be combined with locally-sourced entropy when creating salts, etc.","tags":["Util"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/introspect":{"post":{"summary":"/introspect","operationId":"postIntrospect","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model40"}}}},"tags":["Miscellaneous"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model41"}}}}}}},"/key-data":{"post":{"summary":"/key-data","operationId":"postKeydata","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model42"}}}},"tags":["Miscellaneous"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/availableCommands"}}}}}}},"/newsletters":{"post":{"summary":"/newsletters","operationId":"postNewsletters","description":"\ud83d\udd12 Authenticated with OAuth bearer token or authenticated with session token","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model43"}}}},"tags":["Miscellaneous"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/recoveryKey":{"post":{"summary":"/recoveryKey","operationId":"postRecoverykey","description":"\ud83d\udd12 Authenticated with session token\\n\\nCreates a new recovery key for a user. Recovery keys are one-time-use tokens that can be used to recover the user\'s kB if they forget their password. For more details, see the [**recovery keys**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/recovery_keys.md) docs.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model44"}}}},"tags":["Recovery key"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}},"delete":{"summary":"/recoveryKey","operationId":"deleteRecoverykey","description":"\ud83d\udd12 Authenticated with session token<br/><br/>This route remove an account\'s recovery key. When the key is removed, it can no longer be used to restore an account\'s kB.","tags":["Recovery key"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/recovery_email":{"post":{"summary":"/recovery_email","operationId":"postRecovery_email","description":"\ud83d\udd12 Authenticated with session token\\nAdd a secondary email address to the logged-in account. The created address will be unverified and will not replace the primary email address.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model45"}}}},"tags":["Emails"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 104` - Unverified account\\n`errno: 138` - Unverified session\\n`errno: 139` - Can not add secondary email that is same as your primary\\n`errno: 140` - Email already exists\\n`errno: 141` - Email already exists"}}}},"/token":{"post":{"summary":"/token","operationId":"postToken","parameters":[{"name":"authorization","in":"header","required":false,"schema":{"type":"string","pattern":"^Basic\\\\s+([a-z0-9+\\\\/]+)$"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model46"}}}},"tags":["Miscellaneous"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model47"}}}}}}},"/verify":{"post":{"summary":"/verify","operationId":"postVerify","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model48"}}}},"tags":["Miscellaneous"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model49"}}}}}}},"/account/create":{"post":{"summary":"/account/create","operationId":"postAccountCreate","description":"Creates a user account. The client provides the email address with which this account will be associated and a stretched password. Stretching is detailed on the [**onepw**](https://github.com/mozilla/fxa-auth-server/wiki/onepw-protocol#creating-the-account) wiki page.\\n\\nThis endpoint may send a verification email to the user. Callers may optionally provide the `service` parameter to indicate which service they are acting on behalf of. This is an opaque alphanumeric token that will be embedded in the verification link as a query parameter.\\n\\nCreating an account also logs in. The response contains a `sessionToken` and, optionally, a `keyFetchToken` if the url has a query parameter of `keys=true`.","parameters":[{"description":"Indicates whether a key-fetch token should be returned in the success response.","name":"keys","in":"query","required":false,"schema":{"type":"boolean"}},{"description":"Opaque alphanumeric token to be included in verification links.","name":"service","in":"query","schema":{"type":"string","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model50"}}}},"tags":["Account"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model51"}}}},"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 101` - Account already exists\\n`errno: 144` - Email already exists"}}}},"/account/destroy":{"post":{"summary":"/account/destroy","operationId":"postAccountDestroy","description":"\ud83d\udd12\ud83d\udd13 Optionally authenticated with session token\\n\\nDeletes an account. All stored data is erased. The client should seek user confirmation first. The client should erase data stored on any attached services before deleting the user\'s account data.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model52"}}}},"tags":["Account"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 103` - Incorrect password\\n`errno: 138` - Unverified session"}}}},"/account/device":{"post":{"summary":"/account/device","operationId":"postAccountDevice","description":"\ud83d\udd12 Authenticated with session token or OAuth refresh token\\n\\nCreates or updates the [**device registration**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/device_registration.md) record associated with the auth token used for this request. At least one of `name`, `type`, `pushCallback` or the tuple `{ pushCallback, pushPublicKey, pushAuthKey }` must be present. Beware that if you provide `pushCallback` without the pair `{ pushPublicKey, pushAuthKey }`, both of those keys will be reset to the empty string.\\n\\n`pushEndpointExpired` will be reset to false on update if the tuple `{ pushCallback, pushPublicKey, pushAuthKey }` is specified.\\n\\nDevices should register with this endpoint before attempting to access the user\'s sync data, so that an appropriate device name can be made available to other connected devices.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model53"}}}},"tags":["Devices and Sessions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model54"}}}},"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list): \\n `errno: 107` - Invalid parameter in request body"},"503":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list): \\n `errno: 202` - Feature not enabled"}}}},"/account/finish_setup":{"post":{"summary":"/account/finish_setup","operationId":"postAccountFinish_setup","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model55"}}}},"tags":["Miscellaneous"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/account/login":{"post":{"summary":"/account/login","operationId":"postAccountLogin","description":"Obtain a `sessionToken` and, optionally, a `keyFetchToken` if `keys=true`.","parameters":[{"description":"Indicates whether a key-fetch token should be returned in the success response.","name":"keys","in":"query","required":false,"schema":{"type":"boolean"}},{"description":"Opaque alphanumeric token to be included in verification links.","name":"service","in":"query","schema":{"type":"string","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"}},{"description":"If this param is specified, it forces the login to be verified using the specified method.\\nCurrently supported methods:\\n- `email`: Sends an email with a confirmation link.\\n- `email-2fa`: Sends an email with a confirmation code.\\n- `email-captcha`: Sends an email with an unblock code.","name":"verificationMethod","in":"query","required":false,"schema":{"type":"string","enum":["email","email-otp","email-2fa","email-captcha","totp-2fa"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model56"}}}},"tags":["Account"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model57"}}}},"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 102` - Unknown account\\n`errno: 103` - Incorrect password\\n`errno: 125` - The request was blocked for security reasons\\n`errno: 127` - Invalid unblock code\\n`errno: 142` - Sign in with this email type is not currently supported\\n`errno: 149` - This email can not currently be used to login\\n`errno: 160` - This request requires two step authentication enabled on your account."},"422":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 151` - Failed to send email"}}}},"/account/reset":{"post":{"summary":"/account/reset","operationId":"postAccountReset","description":"\ud83d\udd12 Authenticated with account reset token\\n\\nThis sets the account password and resets `wrapKb` to a new random value.\\n\\nAccount reset tokens are single-use and consumed regardless of whether the request succeeds or fails. They are returned by the `POST /password/forgot/verify_code` endpoint.\\n\\nThe caller can optionally request a new `sessionToken` and `keyFetchToken`.","parameters":[{"description":"Indicates whether a new `keyFetchToken` is required, default to `false`.","name":"keys","in":"query","required":false,"schema":{"type":"boolean"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model58"}}}},"tags":["Account"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 108` - Missing parameter in request body"}}}},"/account/scoped-key-data":{"post":{"summary":"/account/scoped-key-data","operationId":"postAccountScopedkeydata","description":"\ud83d\udd12 Authenticated with session token\\n\\nQuery for the information required to derive scoped encryption keys requested by the specified OAuth client.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model59"}}}},"tags":["Oauth"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/availableCommands"}}}}}}},"/account/stub":{"post":{"summary":"/account/stub","operationId":"postAccountStub","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model62"}}}},"tags":["Miscellaneous"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/authorized-clients/destroy":{"post":{"summary":"/authorized-clients/destroy","operationId":"postAuthorizedclientsDestroy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model63"}}}},"tags":["Miscellaneous"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/certificate/sign":{"post":{"summary":"/certificate/sign","operationId":"postCertificateSign","description":"\ud83d\udd12 Authenticated with session token\\n\\nSign a BrowserID public key. The server is given a public key and returns a signed certificate using the same JWT-like mechanism as a BrowserID primary IdP would (see [**browserid-certifier**](https://github.com/mozilla/browserid-certifier) for details). The signed certificate includes a `principal.email` property to indicate the Firefox Account identifier (a UUID at the account server\'s primary domain) and is stamped with an expiry time based on the `duration` parameter.\\n\\nThis request will fail unless the primary email address for the account has been verified.\\n\\nClients should include a query parameter, `service`, for metrics and validation purposes. The value of `service` should be `sync` when connecting to Firefox Sync or the OAuth `client_id` when connecting to an OAuth relier.\\n\\nIf you do not specify a `service parameter`, or if you specify `service=sync`, this endpoint assumes the request is from a legacy Sync client. If the session token doesn\'t have a corresponding device record, one will be created automatically by the server.\\n\\nThe signed certificate includes these additional claims:\\n\\n  - `fxa-generation`: A number that increases each time the user\'s password is changed.\\n  - `fxa-keysChangedAt`: A timestamp that increases each time the user\'s encryption key is changed.\\n  - `fxa-profileChangedAt`: A timestamp that increases each time the user\'s core profile data is changed.\\n  - `fxa-lastAuthAt`: Authentication time for this session, in seconds since epoch.\\n  - `fxa-verifiedEmail`: The user\'s verified recovery email address.\\n  - `fxa-tokenVerified`: A boolean indicating whether the user\'s login was verified using an email confirmation or 2FA in addition to their password.\\n  - `fxa-amr`: A list of strings giving the ways in which the user was authenticated. Possible values include:\\n    - `pwd`: the user provided the account password\\n    - `email`: the user completed an email confirmation loop\\n    - `otp`: the user completed a 2FA challenge\\n  - `fxa-aal`: An integer giving the authenticator assurance level at which the user was authenticated - that is, the number of independent auth factors that they provided during login.","parameters":[{"name":"service","in":"query","required":false,"schema":{"type":"string","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model64"}}}},"tags":["Sign"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list): \\n `errno: 104` - Unverified account \\n `errno: 108` - Missing parameter in request body \\n `errno: 138` - Unverified session"}}}},"/linked_account/login":{"post":{"summary":"/linked_account/login","operationId":"postLinked_accountLogin","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model65"}}}},"tags":["Third Party Authentication"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/linked_account/unlink":{"post":{"summary":"/linked_account/unlink","operationId":"postLinked_accountUnlink","description":"\ud83d\udd12 Authenticated with session token","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model66"}}}},"tags":["Third Party Authentication"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/oauth/authorization":{"post":{"summary":"/oauth/authorization","operationId":"postOauthAuthorization","description":"\ud83d\udd12 Authenticated with session token\\n\\nAuthorize a new OAuth client connection to the user\'s account, returning a short-lived authentication code that the client can exchange for access tokens at the OAuth token endpoint.\\n\\nThis route behaves like the oauth-server /authorization endpoint except that it is authenticated directly with a sessionToken rather than with a BrowserID assertion.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model67"}}}},"tags":["Oauth"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model68"}}}}}}},"/oauth/destroy":{"post":{"summary":"/oauth/destroy","operationId":"postOauthDestroy","description":"Destroy an OAuth access token or refresh token.\\n\\nThis is the \\"token revocation endpoint\\" as defined in RFC7009 and should be used by clients to explicitly revoke any OAuth tokens that they are no longer using.","parameters":[{"name":"authorization","in":"header","required":false,"schema":{"type":"string","pattern":"^Basic\\\\s+([a-z0-9+\\\\/]+)$"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model69"}}}},"tags":["Oauth"],"responses":{"401":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 171` - Incorrect client secret."},"500":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 162` - Unknown client id."}}}},"/oauth/id-token-verify":{"post":{"summary":"/oauth/id-token-verify","operationId":"postOauthIdtokenverify","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model70"}}}},"tags":["Miscellaneous"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model71"}}}}}}},"/oauth/token":{"post":{"summary":"/oauth/token","operationId":"postOauthToken","description":"\ud83d\udd12\ud83d\udd13 Optionally authenticated with session token\\n\\nGrant new OAuth tokens for use by a connected client, using one of the following grant types:\\n  - `grant_type=authorization_code`: A single-use code obtained via OAuth redirect flow.\\n  - `grant_type=refresh_token`: A refresh token issued by a previous call to this endpoint.\\n  - `grant_type=fxa-credentials`: Directly grant tokens using an FxA sessionToken.\\n\\nThis is the \\"token endpoint\\" as defined in RFC6749, and behaves like the oauth-server /token endpoint except that the `fxa-credentials` grant can be authenticated directly with a sessionToken rather than with a BrowserID assertion.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model72"}}},"x-alternatives":[{"$ref":"#/x-alt-definitions/Model1"},{"$ref":"#/x-alt-definitions/Model2"},{"$ref":"#/x-alt-definitions/Model3"}]},"tags":["Oauth"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model73"}}}},"401":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 110` - Invalid authentication token in request signature."},"500":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 998` - An internal validation check failed."}}}},"/password/create":{"post":{"summary":"/password/create","operationId":"postPasswordCreate","description":"\ud83d\udd12 Authenticated with session token\\n\\nCreates a new password for the user associated with the session token. Creating a new password will generate new encryption key.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model74"}}}},"tags":["Password"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/recoveryKey/exists":{"post":{"summary":"/recoveryKey/exists","operationId":"postRecoverykeyExists","description":"\ud83d\udd12\ud83d\udd13 Optionally authenticated with session token<br/><br/>This route checks to see if given user has setup an account recovery key. When used during the password reset flow, an email can be provided (instead of a sessionToken) to check for the status. However, when using an email, the request is rate limited.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model75"}}}},"tags":["Recovery key"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model76"}}}}}}},"/recoveryKey/verify":{"post":{"summary":"/recoveryKey/verify","operationId":"postRecoverykeyVerify","description":"\ud83d\udd12 Authenticated with session token","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model77"}}}},"tags":["Recovery key"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/recovery_email/destroy":{"post":{"summary":"/recovery_email/destroy","operationId":"postRecovery_emailDestroy","description":"\ud83d\udd12 Authenticated with session token\\n\\nDelete an email address associated with the logged-in user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model78"}}}},"tags":["Emails"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 138` - Unverified session"}}}},"/recovery_email/resend_code":{"post":{"summary":"/recovery_email/resend_code","operationId":"postRecovery_emailResend_code","description":"\ud83d\udd12 Authenticated with session token\\n\\nRe-sends a verification code to the account\'s recovery email address. The code is first sent when the account is created, but if the user thinks the message was lost or accidentally deleted, they can request a new message to be sent via this endpoint. The new message will contain the same code as the original message. When this code is provided to `/v1/recovery_email/verify_code`, the email will be marked as \'verified\'.\\n\\nThis endpoint may send a verification email to the user. Callers may optionally provide the `service` parameter to indicate what identity-attached service they\'re acting on behalf of. This is an opaque alphanumeric token that will be embedded in the verification link as a query parameter.","parameters":[{"description":"Opaque alphanumeric token to be included in verification links.","name":"service","in":"query","schema":{"type":"string","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"}},{"x-format":{"alphanum":true},"name":"type","in":"query","required":false,"schema":{"type":"string","maxLength":32,"enum":["upgradeSession"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model79"}}}},"tags":["Emails"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 150` - Can not resend email code to an email that does not belong to this account"}}}},"/recovery_email/set_primary":{"post":{"summary":"/recovery_email/set_primary","operationId":"postRecovery_emailSet_primary","description":"\ud83d\udd12 Authenticated with session token\\n\\nThis endpoint changes a user\'s primary email address. This email address must belong to the user and be verified.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model80"}}}},"tags":["Emails"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 138` - Unverified session\\n`errno: 147` - Can not change primary email to an unverified email\\n`errno: 148` - Can not change primary email to an email that does not belong to this account"}}}},"/recovery_email/verify_code":{"post":{"summary":"/recovery_email/verify_code","operationId":"postRecovery_emailVerify_code","description":"Verify tokens and/or recovery emails for an account. If a valid token code is detected, the account email and tokens will be set to verified. If a valid email code is detected, the email will be marked as verified.\\n\\nThe verification code will be a random token, delivered in the fragment identifier of a URL sent to the user\'s email address. Navigating to the URL opens a page that extracts the code from the fragment identifier and performs a POST to `/recovery_email/verify_code`. The link can be clicked from any browser, not just the one being attached to the Firefox account.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model81"}}}},"tags":["Emails"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 105` - Invalid verification code\'"}}}},"/session/destroy":{"post":{"summary":"/session/destroy","operationId":"postSessionDestroy","description":"\ud83d\udd12 Authenticated with session token\\n\\nDestroys the current session and invalidates `sessionToken`, to be called when a user signs out. To sign back in, a call must be made to `POST /account/login` to obtain a new `sessionToken`.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model82"}}}},"tags":["Session"],"responses":{"401":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 110` - Invalid authentication token in request signature"}}}},"/session/duplicate":{"post":{"summary":"/session/duplicate","operationId":"postSessionDuplicate","description":"\ud83d\udd12 Authenticated with session token\\n\\nCreate a new `sessionToken` that duplicates the current session. It will have the same verification status as the current session, but will have a distinct verification code.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model83"}}}},"tags":["Session"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/session/reauth":{"post":{"summary":"/session/reauth","operationId":"postSessionReauth","description":"\ud83d\udd12 Authenticated with session token\\n\\nRe-authenticate an existing session token. This is equivalent to calling `/account/login`, but it re-uses an existing session token rather than generating a new one, allowing the caller to maintain session state such as verification and device registration.","parameters":[{"name":"keys","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"service","in":"query","schema":{"type":"string","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"}},{"name":"verificationMethod","in":"query","required":false,"schema":{"type":"string","enum":["email","email-otp","email-2fa","email-captcha","totp-2fa"]}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model84"}}}},"tags":["Session"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model85"}}}},"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 102` - Unknown account\\n`errno: 103` - Incorrect password\\n`errno: 125` - The request was blocked for security reasons\\n`errno: 127` - Invalid unblock code\\n`errno: 142` - Sign in with this email type is not currently supported\\n`errno: 149` - This email can not currently be used to login\\n`errno: 160` - This request requires two-step authentication enabled on your account"}}}},"/session/resend_code":{"post":{"summary":"/session/resend_code","operationId":"postSessionResend_code","description":"\ud83d\udd12 Authenticated with session token","tags":["Session"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/session/verify_code":{"post":{"summary":"/session/verify_code","operationId":"postSessionVerify_code","description":"\ud83d\udd12 Authenticated with session token","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model86"}}}},"tags":["Session"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/support/ticket":{"post":{"summary":"/support/ticket","operationId":"postSupportTicket","description":"\ud83d\udd12 Authenticated with support secret or authenticated with OAuth bearer token","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model87"}}}},"tags":["Miscellaneous"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model88"}}}}}}},"/totp/create":{"post":{"summary":"/totp/create","operationId":"postTotpCreate","description":"\ud83d\udd12 Authenticated with session token\\n\\nCreate a new randomly generated TOTP token for a user if they do not currently have one.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model89"}}}},"tags":["totp"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model90"}}}}}}},"/totp/destroy":{"post":{"summary":"/totp/destroy","operationId":"postTotpDestroy","description":"\ud83d\udd12 Authenticated with session token\\n\\nDeletes the current TOTP token for the user.","tags":["totp"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/account/attached_client/destroy":{"post":{"summary":"/account/attached_client/destroy","operationId":"postAccountAttached_clientDestroy","description":"\ud83d\udd12 Authenticated with session token\\n\\nDestroy all tokens held by a connected client, disconnecting it from the user\'s account.\\n\\nThis endpoint is designed to be used in conjunction with [**/account/attached_clients**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/api.md#get-accountattached_clients). It accepts as the request body an object in the same format as returned by that endpoing, and will disconnect that client from the user\'s account.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model91"}}}},"tags":["Devices and Sessions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/availableCommands"}}}}}}},"/account/device/destroy":{"post":{"summary":"/account/device/destroy","operationId":"postAccountDeviceDestroy","description":"\ud83d\udd12 Authenticated with session token or authenticated with OAuth refresh token\\n\\nDestroys a device record and the associated `sessionToken` for the authenticated user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model92"}}}},"tags":["Devices and Sessions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/availableCommands"}}}}}}},"/account/devices/invoke_command":{"post":{"summary":"/account/devices/invoke_command","operationId":"postAccountDevicesInvoke_command","description":"\ud83d\udd12 Authenticated with session token or authenticated with OAuth refresh token.\\n\\nEnqueues a command to be invoked on a target device.\\n\\nFor more details, see the [**device registration**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/device_registration.md) docs.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model93"}}}},"tags":["Devices and Sessions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model94"}}}},"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 157` - Unavailable device command"}}}},"/account/devices/notify":{"post":{"summary":"/account/devices/notify","operationId":"postAccountDevicesNotify","description":"\ud83d\udd12 Authenticated with session token or authenticated with OAuth refresh token.\\n\\nNotifies a set of devices associated with the user\'s account of an event by sending a browser push notification. A typical use case would be to send a notification to another device after sending a tab with Sync, so it can sync too and display the tab in a timely manner.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model95"}}},"x-alternatives":[{"$ref":"#/x-alt-definitions/Model7"},{"$ref":"#/x-alt-definitions/Model8"}]},"tags":["Devices and Sessions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/availableCommands"}}}},"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 107` - Invalid parameter in request body"},"503":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 202` - Feature not enabled"}}}},"/account/login/reject_unblock_code":{"post":{"summary":"/account/login/reject_unblock_code","operationId":"postAccountLoginReject_unblock_code","description":"Used to reject and report unblock codes that were not requested by the user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model96"}}}},"tags":["Unblock codes"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/account/login/send_unblock_code":{"post":{"summary":"/account/login/send_unblock_code","operationId":"postAccountLoginSend_unblock_code","description":"Send an unblock code via email to reset rate-limiting for an account.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model97"}}}},"tags":["Unblock codes"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/account/unlock/resend_code":{"post":{"summary":"/account/unlock/resend_code","operationId":"postAccountUnlockResend_code","description":"This endpoint is deprecated.","tags":["Account"],"responses":{"410":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 116` - This endpoint is no longer supported"}},"deprecated":true}},"/account/unlock/verify_code":{"post":{"summary":"/account/unlock/verify_code","operationId":"postAccountUnlockVerify_code","description":"This endpoint is deprecated.","tags":["Account"],"responses":{"410":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 116` - This endpoint is no longer supported"}},"deprecated":true}},"/emails/reminders/cad":{"post":{"summary":"/emails/reminders/cad","operationId":"postEmailsRemindersCad","description":"\ud83d\udd12 Authenticated with session token","tags":["Emails"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/oauth/subscriptions/coupon":{"post":{"summary":"/oauth/subscriptions/coupon","operationId":"postOauthSubscriptionsCoupon","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model98"}}}},"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model99"}}}}}}},"/oauth/subscriptions/customer":{"post":{"summary":"/oauth/subscriptions/customer","operationId":"postOauthSubscriptionsCustomer","description":"\ud83d\udd12 Authenticated with OAuth bearer token\\n\\nCreate a new customer object for use with subscription payments.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model100"}}}},"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model106"}}}}}}},"/oauth/subscriptions/paypal-checkout":{"post":{"summary":"/oauth/subscriptions/paypal-checkout","operationId":"postOauthSubscriptionsPaypalcheckout","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model107"}}}},"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model108"}}}}}}},"/oauth/subscriptions/reactivate":{"post":{"summary":"/oauth/subscriptions/reactivate","operationId":"postOauthSubscriptionsReactivate","description":"\ud83d\udd12 Authenticated with OAuth bearer token","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model109"}}}},"tags":["Subscriptions"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/password/change/finish":{"post":{"summary":"/password/change/finish","operationId":"postPasswordChangeFinish","description":"\ud83d\udd12 Authenticated with password change token\\n\\nChange the password and update `wrapKb`. Optionally returns `sessionToken` and `keyFetchToken`.","parameters":[{"description":"Indicates whether a new `keyFetchToken` is required, default to `false`.","name":"keys","in":"query","required":false,"schema":{"type":"boolean"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model110"}}}},"tags":["Password"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 138` - Unverified session"}}}},"/password/change/start":{"post":{"summary":"/password/change/start","operationId":"postPasswordChangeStart","description":"Begin the \\"change password\\" process. Returns a single-use `passwordChangeToken`, to be sent to `POST /password/change/finish`. Also returns a single-use `keyFetchToken`.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model111"}}}},"tags":["Password"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 103` - Incorrect password"}}}},"/password/forgot/resend_code":{"post":{"summary":"/password/forgot/resend_code","operationId":"postPasswordForgotResend_code","description":"\ud83d\udd12 Authenticated with password forgot token\\n\\nResends the email from `POST /password/forgot/send_code`, for use when the original email has been lost or accidentally deleted.\\n\\nThis endpoint requires the `passwordForgotToken` returned in the original response, so only the original client which started the process may request a resent message. The response will match that from `POST /password/forgot/send_code`, except `ttl` will be lower to indicate the shorter validity period. `tries` will also be lower if `POST /password/forgot/verify_code` has been called.","parameters":[{"description":"Identifies the relying service the user was interacting with that triggered the password reset.","name":"service","in":"query","schema":{"type":"string","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model112"}}}},"tags":["Password"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model113"}}}}}}},"/password/forgot/send_code":{"post":{"summary":"/password/forgot/send_code","operationId":"postPasswordForgotSend_code","description":"Requests a \'reset password\' code to be sent to the user\'s recovery email. The user should type this code into the agent, which will then submit it to `POST /password/forgot/verify_code`.\\n\\nThe code will be either 8 or 16 digits long, with the length indicated in the response. The email will either contain the code itself or the URL for a web page that displays the code.\\n\\nThe response includes `passwordForgotToken`, which must be submitted with the code to `POST /password/forgot/verify_code`.\\n\\nThe response also specifies the TTL of `passwordForgotToken` and an upper limit on the number of times the token may be submitted. By limiting the number of submission attempts, we also limit an attacker\'s ability to guess the code. After the token expires, or the maximum number of submissions has been made, the agent must call this endpoint again to generate a new code and token pair.\\n\\nEach account can have at most one `passwordForgotToken` valid at a time. Calling this endpoint causes existing tokens to be invalidated and a new one created. Each token is associated with a specific code, so by extension the codes are invalidated with their tokens.","parameters":[{"description":"Identifies the relying service the user was interacting with that triggered the password reset.","name":"service","in":"query","schema":{"type":"string","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"}},{"name":"keys","in":"query","required":false,"schema":{"type":"boolean"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model114"}}}},"tags":["Password"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model113"}}}},"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list): \\n `errno: 145` - Reset password with this email type is not currently supported"}}}},"/password/forgot/verify_code":{"post":{"summary":"/password/forgot/verify_code","operationId":"postPasswordForgotVerify_code","description":"\ud83d\udd12 Authenticated with password forgot token\\n\\nThe code returned by `POST /v1/password/forgot/send_code` should be submitted to this endpoint with the `passwordForgotToken`. For successful requests, the server will return `accountResetToken`, to be submitted in requests to `POST /account/reset` to reset the account password and `wrapKb`.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model115"}}}},"tags":["Password"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model116"}}}},"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 105` - Invalid verification code"}}}},"/recovery_email/secondary/resend_code":{"post":{"summary":"/recovery_email/secondary/resend_code","operationId":"postRecovery_emailSecondaryResend_code","description":"\ud83d\udd12 Authenticated with session token\\n\\nThis endpoint resend the otp verification to verify the secondary email.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model117"}}}},"tags":["Emails"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 138` - Unverified session\\n`errno: 150` - Can not resend code for email that does not belong to the account"}}}},"/recovery_email/secondary/verify_code":{"post":{"summary":"/recovery_email/secondary/verify_code","operationId":"postRecovery_emailSecondaryVerify_code","description":"\ud83d\udd12 Authenticated with session token\\n\\nThis endpoint verifies a secondary email using a time based (otp) code.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model118"}}}},"tags":["Emails"],"responses":{"400":{"description":"Failing requests may be caused by the following errors (this is not an exhaustive list):\\n`errno: 138` - Unverified session\\n`errno: 105` - Invalid verification code"}}}},"/session/verify/send_push":{"post":{"summary":"/session/verify/send_push","operationId":"postSessionVerifySend_push","description":"\ud83d\udd12 Authenticated with session token","tags":["Session"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/session/verify/totp":{"post":{"summary":"/session/verifiy/totp","operationId":"postSessionVerifyTotp","description":"\ud83d\udd12 Authenticated with session token\\n\\nVerifies the current session if the passed TOTP code is valid.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model119"}}}},"tags":["totp"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model120"}}}}}}},"/oauth/subscriptions/active/new":{"post":{"summary":"/oauth/subscriptions/active/new","operationId":"postOauthSubscriptionsActiveNew","description":"\ud83d\udd12 Authenticated with OAuth bearer token\\n\\nSubscribe the user to a price using a payment method id.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model121"}}}},"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model122"}}}}}}},"/oauth/subscriptions/active/new-paypal":{"post":{"summary":"/oauth/subscriptions/active/new-paypal","operationId":"postOauthSubscriptionsActiveNewpaypal","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model123"}}}},"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model122"}}}}}}},"/oauth/subscriptions/iap/rtdn":{"post":{"summary":"/oauth/subscriptions/iap/rtdn","operationId":"postOauthSubscriptionsIapRtdn","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model124"}}}},"tags":["Subscriptions"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/oauth/subscriptions/invoice/preview":{"post":{"summary":"/oauth/subscriptions/invoice/preview","operationId":"postOauthSubscriptionsInvoicePreview","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model125"}}}},"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model127"}}}}}}},"/oauth/subscriptions/invoice/retry":{"post":{"summary":"oauth/subscriptions/invoice/retry","operationId":"postOauthSubscriptionsInvoiceRetry","description":"\ud83d\udd12 Authenticated with OAuth bearer token\\n\\nRetry an incomplete subscription invoice with a new payment method id.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model128"}}}},"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model129"}}}}}}},"/oauth/subscriptions/paymentmethod/billing-agreement":{"post":{"summary":"/oauth/subscriptions/paymentmethod/billing-agreement","operationId":"postOauthSubscriptionsPaymentmethodBillingagreement","description":"\ud83d\udd12 Authenticated with OAuth bearer token","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model130"}}}},"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model106"}}}}}}},"/oauth/subscriptions/paymentmethod/default":{"post":{"summary":"/oauth/subscriptions/paymentmethod/default","operationId":"postOauthSubscriptionsPaymentmethodDefault","description":"\ud83d\udd12 Authenticated with OAuth bearer token\\n\\nUpdate a user\'s default payment method for invoices to the attached payment method id.","requestBody":{"$ref":"#/components/requestBodies/Model131"},"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model106"}}}}}}},"/oauth/subscriptions/setupintent/create":{"post":{"summary":"/oauth/subscriptions/setupintent/create","operationId":"postOauthSubscriptionsSetupintentCreate","description":"\ud83d\udd12 Authenticated with OAuth bearer token\\n\\nCreate a new setup intent for attaching a new payment method to the user.","tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model132"}}}}}}},"/oauth/subscriptions/stripe/event":{"post":{"summary":"/oauth/subscriptions/stripe/event","operationId":"postOauthSubscriptionsStripeEvent","parameters":[{"name":"stripe-signature","in":"header","required":true,"schema":{"type":"string"}}],"tags":["Subscriptions"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/oauth/subscriptions/iap/play-token/{appName}":{"post":{"summary":"/oauth/subscriptions/iap/play-token/{appName}","operationId":"postOauthSubscriptionsIapPlaytokenAppname","description":"\ud83d\udd12 Authenticated with OAuth bearer token\\n\\nValidate and store a Play Store Puchase Token for the given user. Returns token validity.","parameters":[{"name":"appName","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model133"}}}},"tags":["Subscriptions"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/oauth/subscriptions/paymentmethod/failed/detach":{"post":{"summary":"/oauth/subscriptions/paymentmethod/failed/detach","operationId":"postOauthSubscriptionsPaymentmethodFailedDetach","description":"\ud83d\udd12 Authenticated with OAuth bearer token","requestBody":{"$ref":"#/components/requestBodies/Model131"},"tags":["Subscriptions"],"responses":{"200":{"description":"Successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Model134"}}}}}}},"/oauth/subscriptions/active/{subscriptionId}":{"put":{"summary":"/oauth/subscriptions/active/{subscriptionId}","operationId":"putOauthSubscriptionsActiveSubscriptionid","description":"\ud83d\udd12 Authenticated with OAuth bearer token","parameters":[{"name":"subscriptionId","in":"path","required":true,"schema":{"type":"string","maxLength":255}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model136"}}}},"tags":["Subscriptions"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}},"delete":{"summary":"/oauth/subscriptions/active/{subscriptionid}","operationId":"deleteOauthSubscriptionsActiveSubscriptionid","description":"\ud83d\udd12 Authenticated with OAuth bearer token\\n\\nCancel an active subscription for the user.","parameters":[{"name":"subscriptionId","in":"path","required":true,"schema":{"type":"string","maxLength":255}}],"tags":["Subscriptions"],"responses":{"default":{"description":"Successful","content":{"*/*":{"schema":{"type":"string"}}}}}}}},"x-alt-definitions":{"Model1":{"type":"object","properties":{"grant_type":{"type":"string","description":"The type of grant flow being used. If not specified, it will default to fxa-credentials unless a code parameter is provided, in which case it will default to authorization_code. The value of this parameter determines which other parameters will be expected in the request body, as follows:\\n- When `grant_type=authorization_code`:\\n  - `code`:  *validators.authorizationCode, required* The authorization code previously obtained through a redirect-based OAuth flow.\\n  - `code_verifier`: *validators.pkceCodeVerifier, optional* The [**PKCE**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/fxa-oauth-server/docs/pkce.md) code verifier used when obtaining code. This is required for public OAuth clients, who must authenticate their authorization code use via PKCE.\\n  - `redirect_uri`: *string, URI, optional* The URI at which the client received the authorization code. If supplied this must match the value provided during OAuth client registration.\\n- When `grant_type=refresh_token`:\\n  - `refresh_token`: *validators.refreshToken, required* A refresh token, as issued by a previous call to this endpoint.\\n  - `scope`: *string, optional* A space-separated list of scope values that will be held by the generated token. These must be a subset of the scopes originally granted when the refresh token was generated.\\n- When `grant_type=fxa-credentials`:\\n  - `scope`: *string, optional* A space-separated list of scope values that will be held by the generated tokens.\\n  - `access_type`: *string, valid(online, offline), optional* If specified, a value of offline will cause the client to be granted a refresh token alongside its access token.\\n-In addition, the request must be authenticated with a sessionToken.","default":"authorization_code","enum":["authorization_code"]},"client_id":{"type":"string","description":"The OAuth client identifier for the requesting client application (provided by the connecting client application).","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"client_secret":{"type":"string","description":"The OAuth client secret for the requesting client application. Required for confidential clients, forbidden for public clients.","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},"code":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"code_verifier":{"type":"string","minLength":43,"maxLength":128,"pattern":"^[A-Za-z0-9-\\\\._~]{43,128}$"},"redirect_uri":{"type":"string","x-format":{"uri":true}},"ttl":{"type":"number","description":"The desired lifetime of the issued access token, in seconds. The actual lifetime may be smaller than requested depending on server configuration, and will be returned in the `expired_in` property of the response.","x-constraint":{"positive":true}},"ppid_seed":{"type":"integer","description":"Seed used in sub claim generation of JWT access tokens/ID tokens for clients with [**Pseudonymous Pairwise Identifiers (PPID)**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/oauth/pairwise-pseudonymous-identifiers.md) enabled. Used to forcibly rotate the `sub` claim. If not specified, it will default to `0`.","default":0,"minimum":0,"maximum":1024},"resource":{"type":"string","description":"Indicates the target service or resource at which access is being requested. Its value must be an absolute URI, and may include a query component but must not include a fragment component. Added to the `aud` claim of JWT access tokens.","pattern":"#","x-format":{"uri":true}}},"required":["client_id","code"]},"Model2":{"type":"object","properties":{"grant_type":{"type":"string","enum":["refresh_token"]},"client_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"client_secret":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},"refresh_token":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"scope":{"type":"string"},"ttl":{"type":"number","x-constraint":{"positive":true}},"ppid_seed":{"type":"integer","default":0,"minimum":0,"maximum":1024},"resource":{"type":"string","pattern":"#","x-format":{"uri":true}}},"required":["grant_type","client_id","refresh_token"]},"Model3":{"type":"object","properties":{"grant_type":{"type":"string","default":"fxa-credentials","enum":["fxa-credentials"]},"client_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"scope":{"type":"string"},"access_type":{"type":"string","default":"online","enum":["online","offline"]},"ttl":{"type":"number","x-constraint":{"positive":true}},"resource":{"type":"string","pattern":"#","x-format":{"uri":true}}},"required":["client_id"]},"Model4":{"type":"object","properties":{"access_token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64},"x-alternatives":[{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"}]},"refresh_token":{"type":"string","description":"A token that can be used to grant a new access token when the current one expires, via `grant_type=refresh_token` on this endpoint.","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"id_token":{"type":"string","description":"Open OpenID Connect identity token, provisioned if the openid scope was requested.","minLength":50,"maxLength":10240,"pattern":"^[a-zA-Z0-9_\\\\-\\\\.~=]+$"},"session_token":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"scope":{"type":"string","description":"A space-separated list of scope values held by the granted access token that the connecting client will be granted. The requested scope will be provided by the connecting client as part of its authorization request, but may be pruned by the user in a confirmation dialog before being sent to this endpoint."},"token_type":{"type":"string","description":"The type of token, which determins how the client should use it in subsequent requests. Currently only Bearer tokens are supported.","enum":["bearer"]},"expires_in":{"type":"number","description":"The number of seconds until the access token will expire."},"auth_at":{"type":"number","description":"The timestamp for the session at which the user last authenticated to FxA, in seconds since the epoch."},"keys_jwe":{"type":"string","maxLength":1024,"pattern":"^[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]*\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+$"}},"required":["access_token","scope","token_type","expires_in","auth_at"]},"Model5":{"type":"object","properties":{"access_token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64},"x-alternatives":[{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"}]},"id_token":{"type":"string","minLength":50,"maxLength":10240,"pattern":"^[a-zA-Z0-9_\\\\-\\\\.~=]+$"},"scope":{"type":"string"},"token_type":{"type":"string","enum":["bearer"]},"expires_in":{"type":"number"}},"required":["access_token","scope","token_type","expires_in"]},"Model6":{"type":"object","properties":{"access_token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64},"x-alternatives":[{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"}]},"refresh_token":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"id_token":{"type":"string","minLength":50,"maxLength":10240,"pattern":"^[a-zA-Z0-9_\\\\-\\\\.~=]+$"},"scope":{"type":"string"},"auth_at":{"type":"number"},"token_type":{"type":"string","enum":["bearer"]},"expires_in":{"type":"number"}},"required":["access_token","scope","auth_at","token_type","expires_in"]},"payload":{"type":"object"},"excluded":{"type":"array","description":"Array of device ids to exclude from the notification. Ignored unless `to:\\"all\\"` is specified.","items":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}}},"Model7":{"type":"object","properties":{"to":{"type":"string","description":"Devices to notify. String `\'all\'` or an array containing the relevant device ids.","enum":["all"]},"_endpointAction":{"type":"string","enum":["accountVerify"]},"excluded":{"$ref":"#/x-alt-definitions/excluded"},"payload":{"$ref":"#/components/schemas/availableCommands"},"TTL":{"type":"integer","description":"Push notification TTL, defaults to `0`.","minimum":0}},"required":["to"]},"to":{"type":"array","items":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}}},"Model8":{"type":"object","properties":{"to":{"$ref":"#/x-alt-definitions/to"},"_endpointAction":{"type":"string","enum":["accountVerify"]},"payload":{"$ref":"#/components/schemas/availableCommands"},"TTL":{"type":"integer","minimum":0}},"required":["to"]},"payment_intent":{"type":"object","properties":{"client_secret":{"type":"string"},"created":{"type":"number"},"payment_method":{"type":"string","x-alternatives":[{"type":"string"},{"$ref":"#/x-alt-definitions/payload"}]},"source":{"type":"string","optional":["source","source"],"x-alternatives":[{"type":"string"},{"type":"string"}]},"status":{"type":"string"}},"required":["created","status"]},"latest_invoice":{"type":"object","properties":{"id":{"type":"string"},"payment_intent":{"type":"string","x-alternatives":[{"type":"string"},{"$ref":"#/x-alt-definitions/payment_intent"}]}},"required":["id"]}},"servers":[{"url":"https://api.accounts.firefox.com/v1"}],"components":{"requestBodies":{"Model131":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Model131"}}}}},"schemas":{"Model1":{"type":"object","properties":{"_subscription_type":{"type":"string","enum":["web"]},"created":{"type":"number"},"current_period_end":{"type":"number"},"current_period_start":{"type":"number"},"cancel_at_period_end":{"type":"boolean"},"end_at":{"type":"number","x-alternatives":[{"type":"number"},{"type":"string"}]},"failure_code":{"type":"string"},"failure_message":{"type":"string"},"latest_invoice":{"type":"string"},"plan_id":{"type":"string","maxLength":255},"product_id":{"type":"string","maxLength":255},"product_name":{"type":"string"},"status":{"type":"string"},"subscription_id":{"type":"string","maxLength":255},"promotion_code":{"type":"string"},"promotion_duration":{"type":"string"},"promotion_end":{"type":"number"}},"required":["created","current_period_end","current_period_start","cancel_at_period_end","latest_invoice","plan_id","product_id","product_name","status","subscription_id"]},"subscriptions":{"type":"array","items":{"$ref":"#/components/schemas/Model1"}},"Model2":{"type":"object","properties":{"subscriptions":{"$ref":"#/components/schemas/subscriptions"}}},"recoveryCodes":{"type":"array","minItems":1,"maxItems":8,"x-constraint":{"unique":{"ignoreUndefined":false}},"items":{"type":"string","minLength":8,"maxLength":20,"pattern":"^[a-zA-Z0-9]*$"}},"Model3":{"type":"object","properties":{"recoveryCodes":{"$ref":"#/components/schemas/recoveryCodes"}},"required":["recoveryCodes"]},"Model4":{"type":"object","properties":{"verified":{"type":"boolean"},"isPrimary":{"type":"boolean"},"email":{"type":"string","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"}},"required":["verified","isPrimary","email"]},"Model5":{"type":"array","items":{"$ref":"#/components/schemas/Model4"}},"scope":{"type":"array","items":{"type":"string","maxLength":256,"pattern":"^[a-zA-Z0-9 _\\\\/.:-]*$"}},"location":{"type":"object","description":"Object containing the client\'s state and country","properties":{"city":{"type":"string"},"country":{"type":"string"},"state":{"type":"string"},"stateCode":{"type":"string"}}},"Model6":{"type":"object","properties":{"clientId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"deviceId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}},"sessionTokenId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"refreshTokenId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"isCurrentSession":{"type":"boolean"},"deviceType":{"type":"string","maxLength":16},"name":{"type":"string","maxLength":255},"createdTime":{"type":"number","minimum":0},"createdTimeFormatted":{"type":"string"},"lastAccessTime":{"type":"number","minimum":0},"lastAccessTimeFormatted":{"type":"string"},"approximateLastAccessTime":{"type":"number","minimum":0},"approximateLastAccessTimeFormatted":{"type":"string"},"scope":{"$ref":"#/components/schemas/scope"},"location":{"$ref":"#/components/schemas/location"},"userAgent":{"type":"string","maxLength":255},"os":{"type":"string","maxLength":255}},"required":["clientId","deviceId","sessionTokenId","refreshTokenId","isCurrentSession","deviceType","name","createdTime","lastAccessTime","scope","userAgent"]},"Model7":{"type":"array","items":{"$ref":"#/components/schemas/Model6"}},"availableCommands":{"type":"object"},"Model8":{"type":"object","properties":{"id":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}},"isCurrentDevice":{"type":"boolean"},"lastAccessTime":{"type":"number","minimum":0},"lastAccessTimeFormatted":{"type":"string"},"approximateLastAccessTime":{"type":"number","minimum":0},"approximateLastAccessTimeFormatted":{"type":"string"},"location":{"$ref":"#/components/schemas/location"},"name":{"type":"string","maxLength":255},"type":{"type":"string","maxLength":16},"pushCallback":{"type":"string","maxLength":255,"pattern":"^https:\\\\/\\\\/[a-zA-Z0-9._-]+(\\\\.services\\\\.mozilla\\\\.com|autopush\\\\.dev\\\\.mozaws\\\\.net|autopush\\\\.stage\\\\.mozaws\\\\.net)(?:\\\\:\\\\d+)?(\\\\/.*)?$","x-format":{"uri":{"scheme":["https"]}}},"pushPublicKey":{"type":"string","maxLength":88,"pattern":"^[A-Za-z0-9_-]+$"},"pushAuthKey":{"type":"string","maxLength":24,"pattern":"^[A-Za-z0-9_-]+$"},"pushEndpointExpired":{"type":"boolean"},"availableCommands":{"$ref":"#/components/schemas/availableCommands"}},"required":["id","isCurrentDevice","lastAccessTime","name","type"]},"Model9":{"type":"array","items":{"$ref":"#/components/schemas/Model8"}},"Model10":{"type":"object","properties":{"bundle":{"type":"string","description":"See [**decrypting the bundle**](https://wiki.mozilla.org/Identity/AttachedServices/KeyServerProtocol#Decrypting_the_getToken2_Response) for information on how to extract kA|wrapKb from the bundle.","pattern":"^(?:[a-fA-F0-9]{2})+$"}}},"authenticationMethods":{"type":"array","items":{"type":"string"}},"Model11":{"type":"object","properties":{"email":{"type":"string"},"locale":{"type":"string"},"authenticationMethods":{"$ref":"#/components/schemas/authenticationMethods"},"authenticatorAssuranceLevel":{"type":"number","minimum":0},"subscriptionsByClientId":{"$ref":"#/components/schemas/availableCommands"},"profileChangedAt":{"type":"number","minimum":0},"metricsEnabled":{"type":"boolean"}}},"Model12":{"type":"object","properties":{"id":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"lastAccessTime":{"type":"number","minimum":0},"lastAccessTimeFormatted":{"type":"string"},"approximateLastAccessTime":{"type":"number","minimum":0},"approximateLastAccessTimeFormatted":{"type":"string"},"createdTime":{"type":"number","minimum":0},"createdTimeFormatted":{"type":"string"},"location":{"$ref":"#/components/schemas/location"},"userAgent":{"type":"string","maxLength":255},"os":{"type":"string","maxLength":255},"deviceId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}},"deviceName":{"type":"string","maxLength":255},"deviceAvailableCommands":{"$ref":"#/components/schemas/availableCommands"},"deviceType":{"type":"string","maxLength":16},"deviceCallbackURL":{"type":"string","maxLength":255,"pattern":"^https:\\\\/\\\\/[a-zA-Z0-9._-]+(\\\\.services\\\\.mozilla\\\\.com|autopush\\\\.dev\\\\.mozaws\\\\.net|autopush\\\\.stage\\\\.mozaws\\\\.net)(?:\\\\:\\\\d+)?(\\\\/.*)?$","x-format":{"uri":{"scheme":["https"]}}},"deviceCallbackPublicKey":{"type":"string","maxLength":88,"pattern":"^[A-Za-z0-9_-]+$"},"deviceCallbackAuthKey":{"type":"string","maxLength":24,"pattern":"^[A-Za-z0-9_-]+$"},"deviceCallbackIsExpired":{"type":"boolean"},"isDevice":{"type":"boolean"},"isCurrentDevice":{"type":"boolean"}},"required":["id","lastAccessTime","createdTime","userAgent","deviceId","deviceName","deviceAvailableCommands","deviceType","deviceCallbackURL","deviceCallbackPublicKey","deviceCallbackAuthKey","deviceCallbackIsExpired","isDevice","isCurrentDevice"]},"Model13":{"type":"array","items":{"$ref":"#/components/schemas/Model12"}},"Model14":{"type":"object","properties":{"id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"name":{"type":"string"},"trusted":{"type":"boolean"},"image_uri":{"type":"string"},"redirect_uri":{"type":"string"}},"required":["id","name","trusted","redirect_uri"]},"Model15":{"type":"object","properties":{"email":{"type":"string"},"verified":{"type":"boolean"},"sessionVerified":{"type":"boolean"},"emailVerified":{"type":"boolean"}},"required":["email","verified"]},"Model16":{"type":"object","properties":{"state":{"type":"string"},"uid":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"}},"required":["state","uid"]},"Model17":{"type":"object","properties":{"exists":{"type":"boolean"},"verified":{"type":"boolean"}}},"data":{"type":"object","properties":{"command":{"type":"string","maxLength":255},"payload":{"$ref":"#/components/schemas/availableCommands"},"sender":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}}},"required":["command","payload"]},"Model18":{"type":"object","properties":{"index":{"type":"number"},"data":{"$ref":"#/components/schemas/data"}},"required":["index","data"]},"messages":{"type":"array","description":"An array of individual commands for the device to process.","items":{"$ref":"#/components/schemas/Model18"}},"Model19":{"type":"object","properties":{"index":{"type":"number","description":"The largest index of the commands returned in this response. This value can be passed as the index parameter in subsequent calls in order to page through all the items."},"last":{"type":"boolean","description":"Indicates whether more commands and enqueued than could be returned within the specific limit."},"messages":{"$ref":"#/components/schemas/messages"}},"required":["index"]},"Model20":{"type":"object","properties":{"uid":{"type":"string"},"subscriptionId":{"type":"string","maxLength":255},"productId":{"type":"string","maxLength":255},"createdAt":{"type":"number"},"cancelledAt":{"type":"number","x-alternatives":[{"type":"number"},{"type":"string"}]}},"required":["uid","subscriptionId","productId","createdAt"]},"Model21":{"type":"array","items":{"$ref":"#/components/schemas/Model20"}},"Model22":{"type":"object","properties":{"clientId":{"type":"string"},"capabilities":{"$ref":"#/components/schemas/authenticationMethods"}}},"Model23":{"type":"array","items":{"$ref":"#/components/schemas/Model22"}},"product_metadata":{"type":"object","properties":{"webIconURL":{"type":"string","x-format":{"uri":true}},"upgradeCTA":{"type":"string"},"downloadURL":{"type":"string","x-format":{"uri":true}},"successActionButtonURL":{"type":"string","x-format":{"uri":true}},"appStoreLink":{"type":"string","x-format":{"uri":true}},"playStoreLink":{"type":"string","x-format":{"uri":true}},"productSet":{"type":"string"},"productOrder":{"type":"number"},"product:termsOfServiceDownloadURL":{"type":"string","pattern":"^https:\\\\/\\\\/accounts-static\\\\.cdn\\\\.mozilla\\\\.net\\\\/legal\\\\/(.*)"},"product:termsOfServiceURL":{"type":"string","x-format":{"uri":true}},"product:privacyNoticeDownloadURL":{"type":"string","pattern":"^https:\\\\/\\\\/accounts-static\\\\.cdn\\\\.mozilla\\\\.net\\\\/legal\\\\/(.*)"},"product:privacyNoticeURL":{"type":"string","x-format":{"uri":true}},"product:cancellationSurveyURL":{"type":"string","x-format":{"uri":true}}},"required":["webIconURL","product:termsOfServiceDownloadURL","product:termsOfServiceURL","product:privacyNoticeURL"]},"urls":{"type":"object","properties":{"successActionButton":{"type":"string","x-format":{"uri":true}},"webIcon":{"type":"string","x-format":{"uri":true}},"emailIcon":{"type":"string","x-format":{"uri":true}},"termsOfService":{"type":"string","x-format":{"uri":true}},"termsOfServiceDownload":{"type":"string","x-format":{"uri":true}},"privacyNotice":{"type":"string","x-format":{"uri":true}},"privacyNoticeDownload":{"type":"string","x-format":{"uri":true}},"playStore":{"type":"string","x-format":{"uri":true}},"appStore":{"type":"string","x-format":{"uri":true}},"cancellationSurvey":{"type":"string","x-format":{"uri":true}}}},"uiContent":{"type":"object","properties":{"subtitle":{"type":"string"},"details":{"$ref":"#/components/schemas/authenticationMethods"},"successActionButtonLabel":{"type":"string"},"upgradeCTA":{"type":"string"}}},"styles":{"type":"object","properties":{"webIconBackground":{"type":"string"}}},"support":{"type":"object","properties":{"app":{"$ref":"#/components/schemas/authenticationMethods"}}},"configuration":{"type":"object","properties":{"id":{"type":"string"},"urls":{"$ref":"#/components/schemas/urls"},"uiContent":{"$ref":"#/components/schemas/uiContent"},"styles":{"$ref":"#/components/schemas/styles"},"locales":{"$ref":"#/components/schemas/availableCommands"},"support":{"$ref":"#/components/schemas/support"},"stripeProductId":{"type":"string"},"productSet":{"type":"string"},"promotionCodes":{"$ref":"#/components/schemas/authenticationMethods"},"productConfigId":{"type":"string"},"stripePriceId":{"type":"string"},"productOrder":{"type":"number"},"playSkuIds":{"$ref":"#/components/schemas/authenticationMethods"},"appStoreProductIds":{"$ref":"#/components/schemas/authenticationMethods"}}},"Model24":{"type":"object","properties":{"plan_id":{"type":"string","maxLength":255},"plan_metadata":{"$ref":"#/components/schemas/availableCommands"},"product_id":{"type":"string","maxLength":255},"product_name":{"type":"string"},"plan_name":{"type":"string"},"product_metadata":{"$ref":"#/components/schemas/product_metadata"},"interval":{"type":"string"},"interval_count":{"type":"number"},"amount":{"type":"number"},"currency":{"type":"string"},"configuration":{"$ref":"#/components/schemas/configuration"}},"required":["plan_id","product_id","product_name","interval","interval_count","amount","currency"]},"Model25":{"type":"array","items":{"$ref":"#/components/schemas/Model24"}},"Model26":{"type":"object","properties":{"product_name":{"type":"string"}},"required":["product_name"]},"Model27":{"type":"object","properties":{"created":{"type":"number"},"current_period_end":{"type":"number"},"current_period_start":{"type":"number"},"plan_changed":{"type":"number","x-alternatives":[{"type":"number"},{"type":"string"}]},"previous_product":{"type":"string","x-alternatives":[{"type":"string"},{"type":"string"}]},"product_name":{"type":"string"},"status":{"type":"string"},"subscription_id":{"type":"string","maxLength":255}},"required":["created","current_period_end","current_period_start","product_name","status","subscription_id"]},"web":{"type":"array","items":{"$ref":"#/components/schemas/Model27"}},"Model28":{"type":"object","properties":{"_subscription_type":{"type":"string","enum":["iap_google"]},"auto_renewing":{"type":"boolean"},"cancel_reason":{"type":"number"},"expiry_time_millis":{"type":"number"},"package_name":{"type":"string"},"sku":{"type":"string"},"product_id":{"type":"string"},"product_name":{"type":"string"}},"required":["auto_renewing","expiry_time_millis","product_name"]},"iap_google":{"type":"array","items":{"$ref":"#/components/schemas/Model28"}},"Model29":{"type":"object","properties":{"web":{"$ref":"#/components/schemas/web"},"iap_google":{"$ref":"#/components/schemas/iap_google"}}},"Model30":{"type":"object","properties":{"tries":{"type":"number"},"ttl":{"type":"number"}}},"Model31":{"type":"object","properties":{"customerId":{"type":"string"},"billing_name":{"type":"string","x-alternatives":[{"type":"string"},{"type":"string"}]},"exp_month":{"type":"number"},"exp_year":{"type":"number"},"last4":{"type":"string"},"payment_provider":{"type":"string"},"payment_type":{"type":"string"},"paypal_payment_error":{"type":"string"},"brand":{"type":"string"},"billing_agreement_id":{"type":"string","x-alternatives":[{"type":"string"},{"type":"string"}]},"subscriptions":{"$ref":"#/components/schemas/subscriptions"}},"required":["subscriptions"]},"Model32":{"type":"object","properties":{"subscriptionId":{"type":"string"},"period_start":{"type":"number"},"total":{"type":"number"}},"required":["subscriptionId","period_start","total"]},"Model33":{"type":"array","items":{"$ref":"#/components/schemas/Model32"}},"Model34":{"type":"object","properties":{"client_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"assertion":{"type":"string","minLength":50,"maxLength":10240,"pattern":"^[a-zA-Z0-9_\\\\-\\\\.~=]+$"},"redirect_uri":{"type":"string","maxLength":256,"x-format":{"uri":{"scheme":["https"]}}},"scope":{"type":"string"},"response_type":{"type":"string","default":"code","enum":["code","token"]},"state":{"type":"string","maxLength":512,"required":["state"],"optional":["state"],"x-alternatives":[{"type":"string","maxLength":512},{"type":"string","maxLength":512}]},"ttl":{"type":"number","default":86400,"x-constraint":{"positive":true},"optional":["ttl"],"x-alternatives":[{"type":"number","default":86400,"x-constraint":{"positive":true}}]},"access_type":{"type":"string","default":"online","enum":["offline","online"]},"code_challenge":{"type":"string","x-constraint":{"length":43},"optional":["code_challenge"],"x-alternatives":[{"type":"string","x-constraint":{"length":43}}]},"code_challenge_method":{"type":"string","enum":["S256"],"required":["code_challenge_method"],"optional":["code_challenge_method"],"x-alternatives":[{"type":"string","enum":["S256"]},{"type":"string","enum":["S256"]}]},"keys_jwe":{"type":"string","maxLength":1024,"pattern":"^[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]*\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+$","optional":["keys_jwe"],"x-alternatives":[{"type":"string","maxLength":1024,"pattern":"^[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]*\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+$"}]},"acr_values":{"type":"string","maxLength":256},"resource":{"type":"string","pattern":"#","x-format":{"uri":true},"optional":["resource"],"x-alternatives":[{"type":"string","pattern":"#","x-format":{"uri":true}}]}},"required":["client_id","assertion","scope"]},"Model35":{"type":"object","properties":{"redirect":{"type":"string"},"code":{"type":"string"},"state":{"type":"string"},"access_token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64},"x-alternatives":[{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"}]},"token_type":{"type":"string","enum":["bearer"]},"scope":{"type":"string"},"auth_at":{"type":"number"},"expires_in":{"type":"number"}}},"Model36":{"type":"object","properties":{"assertion":{"type":"string","minLength":50,"maxLength":10240,"pattern":"^[a-zA-Z0-9_\\\\-\\\\.~=]+$"}},"required":["assertion"]},"Model37":{"type":"object","properties":{"client_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"refresh_token_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},"client_name":{"type":"string"},"created_time":{"type":"number","minimum":0},"last_access_time":{"type":"number","minimum":0},"scope":{"$ref":"#/components/schemas/authenticationMethods"}},"required":["client_id","client_name","created_time","last_access_time","scope"]},"Model38":{"type":"array","items":{"$ref":"#/components/schemas/Model37"}},"Model39":{"type":"object","properties":{"access_token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64},"x-alternatives":[{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"}]},"refresh_token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},"refresh_token_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}}}},"Model40":{"type":"object","properties":{"token":{"type":"string"},"token_type_hint":{"type":"string","enum":["access_token","refresh_token"]}},"required":["token"]},"Model41":{"type":"object","properties":{"active":{"type":"boolean"},"scope":{"type":"string"},"client_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"token_type":{"type":"string","enum":["access_token","refresh_token"]},"exp":{"type":"number"},"iat":{"type":"number"},"sub":{"type":"string"},"iss":{"type":"string"},"jti":{"type":"string"},"fxa-lastUsedAt":{"type":"number"}},"required":["active"]},"Model42":{"type":"object","properties":{"client_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"assertion":{"type":"string","minLength":50,"maxLength":10240,"pattern":"^[a-zA-Z0-9_\\\\-\\\\.~=]+$"},"scope":{"type":"string"}},"required":["client_id","assertion","scope"]},"newsletters":{"type":"array","default":[],"items":{"type":"string","enum":["firefox-accounts-journey","knowledge-is-power","take-action-for-the-internet","test-pilot","mozilla-and-you"]}},"Model43":{"type":"object","properties":{"newsletters":{"$ref":"#/components/schemas/newsletters"}},"required":["newsletters"]},"Model44":{"type":"object","properties":{"recoveryKeyId":{"type":"string","description":"A unique identifier for this recovery key, derived from the key via HKDF.","maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"},"recoveryData":{"type":"string","description":"An encrypted bundle containing the user\'s kB.","maxLength":1024,"pattern":"[a-zA-Z0-9.]"},"enabled":{"type":"boolean","default":true}},"required":["recoveryData"]},"Model45":{"type":"object","properties":{"email":{"type":"string","description":"The email address to add to the account.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"}},"required":["email"]},"Model46":{"type":"object","properties":{"grant_type":{"type":"string","default":"authorization_code","enum":["authorization_code","refresh_token","fxa-credentials"]},"ttl":{"type":"number","default":86400,"x-constraint":{"positive":true}},"scope":{"type":"string","required":["scope"],"optional":["scope"],"x-alternatives":[{"type":"string"},{"type":"string"}]},"ppid_seed":{"type":"integer","default":0,"minimum":0,"maximum":1024},"resource":{"type":"string","pattern":"#","x-format":{"uri":true}}}},"Model47":{"type":"object","properties":{"access_token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64},"x-alternatives":[{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"}]},"refresh_token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},"id_token":{"type":"string","minLength":50,"maxLength":10240,"pattern":"^[a-zA-Z0-9_\\\\-\\\\.~=]+$"},"session_token_id":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"scope":{"type":"string"},"token_type":{"type":"string","enum":["bearer"]},"expires_in":{"type":"number","maximum":86400},"auth_at":{"type":"number"},"keys_jwe":{"type":"string","maxLength":1024,"pattern":"^[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]*\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+$"}},"required":["access_token","scope","token_type","expires_in"]},"Model48":{"type":"object","properties":{"token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64},"x-alternatives":[{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"}]}},"required":["token"]},"Model49":{"type":"object","properties":{"user":{"type":"string"},"client_id":{"type":"string"},"scope":{"$ref":"#/components/schemas/authenticationMethods"},"generation":{"type":"number","minimum":0},"profile_changed_at":{"type":"number","minimum":0}},"required":["user","client_id"]},"metricsContext":{"type":"object","properties":{"deviceId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}},"entrypoint":{"type":"string","maxLength":128,"pattern":"^[\\\\w.:-]+$"},"entrypointExperiment":{"type":"string","maxLength":128,"pattern":"^[\\\\w.:-]+$"},"entrypointVariation":{"type":"string","maxLength":128,"pattern":"^[\\\\w.:-]+$"},"flowId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"flowBeginTime":{"type":"integer","x-constraint":{"positive":true}},"utmCampaign":{"type":"string","enum":["page+referral+-+not+part+of+a+campaign"],"maxLength":128,"pattern":"^[\\\\w\\\\/.%-]+$"},"utmContent":{"type":"string","maxLength":128,"pattern":"^[\\\\w\\\\/.%-]+$"},"utmMedium":{"type":"string","maxLength":128,"pattern":"^[\\\\w\\\\/.%-]+$"},"utmSource":{"type":"string","maxLength":128,"pattern":"^[\\\\w\\\\/.%-]+$"},"utmTerm":{"type":"string","maxLength":128,"pattern":"^[\\\\w\\\\/.%-]+$"},"productId":{"type":"string","maxLength":128},"planId":{"type":"string","maxLength":128}}},"Model50":{"type":"object","properties":{"email":{"type":"string","description":"The primary email for this account.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"authPW":{"type":"string","description":"The PBKDF2/HKDF-stretched password as a hex string.","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"service":{"type":"string","description":"Opaque alphanumeric token to be included in verification links.","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"},"redirectTo":{"type":"string","description":"URL that the client should be redirected to after handling the request.","maxLength":512},"resume":{"type":"string","description":"Opaque URL-encoded string to be included in the verification link as a query parameter.","maxLength":2048},"metricsContext":{"$ref":"#/components/schemas/metricsContext"},"style":{"type":"string","enum":["trailhead"]},"verificationMethod":{"type":"string","enum":["email","email-otp","email-2fa","email-captcha","totp-2fa"]}},"required":["email","authPW"]},"Model51":{"type":"object","properties":{"uid":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"sessionToken":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"keyFetchToken":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"authAt":{"type":"integer","description":"The timestamp for the session at which the user last authenticated to FxA, in seconds since the epoch."},"verificationMethod":{"type":"string","enum":["email","email-otp","email-2fa","email-captcha","totp-2fa"]}},"required":["uid","sessionToken"]},"Model52":{"type":"object","properties":{"email":{"type":"string","description":"The primary email for this account.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"authPW":{"type":"string","description":"The PBKDF2/HKDF-stretched password as a hex string.","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}}},"required":["email","authPW"]},"capabilities":{"type":"array","x-constraint":{"length":0},"items":{"type":"string"}},"Model53":{"type":"object","properties":{"id":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}},"name":{"type":"string","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"type":{"type":"string","maxLength":16},"pushCallback":{"type":"string","maxLength":255,"pattern":"^https:\\\\/\\\\/[a-zA-Z0-9._-]+(\\\\.services\\\\.mozilla\\\\.com|autopush\\\\.dev\\\\.mozaws\\\\.net|autopush\\\\.stage\\\\.mozaws\\\\.net)(?:\\\\:\\\\d+)?(\\\\/.*)?$","x-format":{"uri":{"scheme":["https"]}}},"pushPublicKey":{"type":"string","maxLength":88,"pattern":"^[A-Za-z0-9_-]+$"},"pushAuthKey":{"type":"string","maxLength":24,"pattern":"^[A-Za-z0-9_-]+$"},"availableCommands":{"$ref":"#/components/schemas/availableCommands"},"capabilities":{"$ref":"#/components/schemas/capabilities"}}},"Model54":{"type":"object","properties":{"id":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}},"createdAt":{"type":"number","x-constraint":{"positive":true}},"name":{"type":"string","maxLength":255},"type":{"type":"string","maxLength":16},"pushCallback":{"type":"string","maxLength":255,"pattern":"^https:\\\\/\\\\/[a-zA-Z0-9._-]+(\\\\.services\\\\.mozilla\\\\.com|autopush\\\\.dev\\\\.mozaws\\\\.net|autopush\\\\.stage\\\\.mozaws\\\\.net)(?:\\\\:\\\\d+)?(\\\\/.*)?$","x-format":{"uri":{"scheme":["https"]}}},"pushPublicKey":{"type":"string","maxLength":88,"pattern":"^[A-Za-z0-9_-]+$"},"pushAuthKey":{"type":"string","maxLength":24,"pattern":"^[A-Za-z0-9_-]+$"},"pushEndpointExpired":{"type":"boolean"},"availableCommands":{"$ref":"#/components/schemas/availableCommands"}},"required":["id"]},"Model55":{"type":"object","properties":{"token":{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"},"authPW":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}}},"required":["authPW"]},"Model56":{"type":"object","properties":{"email":{"type":"string","description":"The primary email for this account.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"authPW":{"type":"string","description":"The PBKDF2/HKDF-stretched password as a hex string.","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"service":{"type":"string","description":"Opaque alphanumeric token to be included in verification links.","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"},"redirectTo":{"type":"string","maxLength":512},"resume":{"type":"string","description":"Opaque URL-encoded string to be included in the verification link as a query parameter."},"reason":{"type":"string","description":"Alphanumeric string indicating the reason for establishing a new session; may be \\"login\\" (the default) or \\"reconnect\\".","maxLength":16},"unblockCode":{"type":"string","description":"Alphanumeric code used to unblock certain rate-limitings.","pattern":"^[a-zA-Z0-9]*$","x-constraint":{"length":8}},"metricsContext":{"$ref":"#/components/schemas/metricsContext"},"originalLoginEmail":{"type":"string","description":"This parameter is the original email used to login with. Typically, it is specified after a user logins with a different email case, or changed their primary email address.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"verificationMethod":{"type":"string","description":"If this param is specified, it forces the login to be verified using the specified method.\\nCurrently supported methods:\\n- `email`: Sends an email with a confirmation link.\\n- `email-2fa`: Sends an email with a confirmation code.\\n- `email-captcha`: Sends an email with an unblock code.","enum":["email","email-otp","email-2fa","email-captcha","totp-2fa"]}},"required":["email","authPW"]},"Model57":{"type":"object","properties":{"uid":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"sessionToken":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"keyFetchToken":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"verificationMethod":{"type":"string","description":"If this param is specified, it forces the login to be verified using the specified method.\\nCurrently supported methods:\\n- `email`: Sends an email with a confirmation link.\\n- `email-2fa`: Sends an email with a confirmation code.\\n- `email-captcha`: Sends an email with an unblock code."},"verificationReason":{"type":"string","description":"The authentication method that required additional verification."},"verified":{"type":"boolean"},"authAt":{"type":"integer","description":"The timestamp for the session at which the user last authenticated to FxA, in seconds since the epoch."},"metricsEnabled":{"type":"boolean"}},"required":["uid","sessionToken","verified","metricsEnabled"]},"Model58":{"type":"object","properties":{"authPW":{"type":"string","description":"The PBKDF2/HKDF-stretched password as a hex string.","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"wrapKb":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"recoveryKeyId":{"type":"string","maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"},"sessionToken":{"type":"boolean","description":"Indicates whether a new `sessionToken` is required, default to `false`."}},"required":["authPW"]},"Model59":{"type":"object","properties":{"client_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"scope":{"type":"string"}},"required":["client_id","scope"]},"Model60":{"type":"object","properties":{"email":{"type":"string","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"checkDomain":{"type":"string"}},"required":["email"]},"Model61":{"type":"object","properties":{"exists":{"type":"boolean"},"invalidDomain":{"type":"boolean"}},"required":["exists"]},"Model62":{"type":"object","properties":{"email":{"type":"string","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"clientId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":16}},"metricsContext":{"$ref":"#/components/schemas/metricsContext"}},"required":["email","clientId"]},"Model63":{"type":"object","properties":{"client_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"refresh_token_id":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},"assertion":{"type":"string","minLength":50,"maxLength":10240,"pattern":"^[a-zA-Z0-9_\\\\-\\\\.~=]+$"}},"required":["client_id"]},"publicKey":{"type":"object","description":"The key to sign (run bin/generate-keypair from [**browserid-crypto**](https://github.com/mozilla/browserid-crypto)).","properties":{"algorithm":{"type":"string","enum":["RS","DS"]},"n":{"type":"string"},"e":{"type":"string"},"y":{"type":"string"},"p":{"type":"string"},"q":{"type":"string"},"g":{"type":"string"},"version":{"type":"string"}},"required":["algorithm"]},"Model64":{"type":"object","properties":{"publicKey":{"$ref":"#/components/schemas/publicKey"},"duration":{"type":"integer","description":"Time interval in milliseconds until the certificate will expire, up to a maximum of 24 hours.","minimum":0,"maximum":86400000}},"required":["publicKey","duration"]},"Model65":{"type":"object","properties":{"idToken":{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"},"provider":{"type":"string","enum":["google","apple"],"maxLength":256},"code":{"type":"string"},"metricsContext":{"$ref":"#/components/schemas/metricsContext"}},"required":["provider"]},"Model66":{"type":"object","properties":{"provider":{"type":"string","enum":["google","apple"],"maxLength":256}},"required":["provider"]},"Model67":{"type":"object","properties":{"response_type":{"type":"string","description":"Determines the format of the response. Since we only support the authorization-code grant flow, the only permitted value is \'code\'.","default":"code","enum":["code"]},"client_id":{"type":"string","description":"The OAuth client identifier for the requesting client application (provided by the connecting client application).","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"redirect_uri":{"type":"string","description":"The URI at which the connecting client expects to receive the authorization code. If supplied this must match the value provided during OAuth client registration.","maxLength":256,"x-format":{"uri":{"scheme":["http","https"]}}},"scope":{"type":"string","description":"A space-separated list of scope values held by the granted access token that the connecting client will be granted. The requested scope will be provided by the connecting client as part of its authorization request, but may be pruned by the user in a confirmation dialog before being sent to this endpoint."},"state":{"type":"string","description":"An opaque string provided by the connecting client application, which will be returned unmodified alongside the authorization code. This can be used by the connecting client to guard against certain classes of attack in the redirect-based OAuth flow.","maxLength":512},"access_type":{"type":"string","description":"If specified, a value of `offline` will cause the connecting client to be granted a refresh token alongside its access token.","default":"online","enum":["offline","online"]},"code_challenge_method":{"type":"string","description":"Required for public OAuth clients, who must authenticate their authorization code use via [**PKCE**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/fxa-oauth-server/docs/pkce.md). The only support method is \'S256\'.","enum":["S256"]},"code_challenge":{"type":"string","description":"Required for public OAuth clients, who must authenticate their authorization code use via [**PKCE**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/fxa-oauth-server/docs/pkce.md).","pattern":"^[A-Za-z0-9_-]+$","x-constraint":{"length":43}},"keys_jwe":{"type":"string","description":"An encrypted bundle of key material, to be returned to the client when it redeems the authorization code.","maxLength":1024,"pattern":"^[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]*\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+$"},"acr_values":{"type":"string","description":"A space-separated list of ACR values specifying acceptable levels of user authentication. Specifying `AAL2` will ensure that the user has been authenticated with 2FA before authorizing the requested grant.","maxLength":256}},"required":["client_id","state"]},"Model68":{"type":"object","properties":{"redirect":{"type":"string"},"code":{"type":"string"},"state":{"type":"string","maxLength":512}}},"Model69":{"type":"object","properties":{"token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64},"x-alternatives":[{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64},"x-alternatives":[{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"}]},{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}}]},"token_type_hint":{"type":"string","description":"A hint as to what type of token is being revoked. Expected values are \\"access_token\\" or \\"refresh_token\\", Unrecognized values will be silently ignored, and specifying an incorrect hint may cause to the request to take longer but will still result in the token being destroyed.","maxLength":64}}},"Model70":{"type":"object","properties":{"client_id":{"type":"string"},"id_token":{"type":"string"},"expiry_grace_period":{"type":"number","default":0}},"required":["client_id","id_token"]},"Model71":{"type":"object","properties":{"acr":{"type":"string"},"aud":{"type":"string"},"alg":{"type":"string"},"at_hash":{"type":"string"},"amr":{"$ref":"#/components/schemas/authenticationMethods"},"exp":{"type":"number"},"fxa-aal":{"type":"number"},"iat":{"type":"number"},"iss":{"type":"string"},"sub":{"type":"string"}}},"Model72":{"type":"object","properties":{"grant_type":{"type":"string","description":"The type of grant flow being used. If not specified, it will default to fxa-credentials unless a code parameter is provided, in which case it will default to authorization_code. The value of this parameter determines which other parameters will be expected in the request body, as follows:\\n- When `grant_type=authorization_code`:\\n  - `code`:  *validators.authorizationCode, required* The authorization code previously obtained through a redirect-based OAuth flow.\\n  - `code_verifier`: *validators.pkceCodeVerifier, optional* The [**PKCE**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/fxa-oauth-server/docs/pkce.md) code verifier used when obtaining code. This is required for public OAuth clients, who must authenticate their authorization code use via PKCE.\\n  - `redirect_uri`: *string, URI, optional* The URI at which the client received the authorization code. If supplied this must match the value provided during OAuth client registration.\\n- When `grant_type=refresh_token`:\\n  - `refresh_token`: *validators.refreshToken, required* A refresh token, as issued by a previous call to this endpoint.\\n  - `scope`: *string, optional* A space-separated list of scope values that will be held by the generated token. These must be a subset of the scopes originally granted when the refresh token was generated.\\n- When `grant_type=fxa-credentials`:\\n  - `scope`: *string, optional* A space-separated list of scope values that will be held by the generated tokens.\\n  - `access_type`: *string, valid(online, offline), optional* If specified, a value of offline will cause the client to be granted a refresh token alongside its access token.\\n-In addition, the request must be authenticated with a sessionToken.","default":"authorization_code","enum":["authorization_code"]},"client_id":{"type":"string","description":"The OAuth client identifier for the requesting client application (provided by the connecting client application).","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":16}},"client_secret":{"type":"string","description":"The OAuth client secret for the requesting client application. Required for confidential clients, forbidden for public clients.","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},"code":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"code_verifier":{"type":"string","minLength":43,"maxLength":128,"pattern":"^[A-Za-z0-9-\\\\._~]{43,128}$"},"redirect_uri":{"type":"string","x-format":{"uri":true}},"ttl":{"type":"number","description":"The desired lifetime of the issued access token, in seconds. The actual lifetime may be smaller than requested depending on server configuration, and will be returned in the `expired_in` property of the response.","x-constraint":{"positive":true}},"ppid_seed":{"type":"integer","description":"Seed used in sub claim generation of JWT access tokens/ID tokens for clients with [**Pseudonymous Pairwise Identifiers (PPID)**](https://github.com/mozilla/fxa/blob/main/packages/fxa-auth-server/docs/oauth/pairwise-pseudonymous-identifiers.md) enabled. Used to forcibly rotate the `sub` claim. If not specified, it will default to `0`.","default":0,"minimum":0,"maximum":1024},"resource":{"type":"string","description":"Indicates the target service or resource at which access is being requested. Its value must be an absolute URI, and may include a query component but must not include a fragment component. Added to the `aud` claim of JWT access tokens.","pattern":"#","x-format":{"uri":true}}},"required":["client_id","code"]},"Model73":{"type":"object","properties":{"access_token":{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64},"x-alternatives":[{"type":"string","pattern":"^(?:[0-9a-f]{2})+$","x-constraint":{"length":64}},{"type":"string","maxLength":1024,"pattern":"^([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)\\\\.([a-zA-Z0-9\\\\-_]+)$"}]},"refresh_token":{"type":"string","description":"A token that can be used to grant a new access token when the current one expires, via `grant_type=refresh_token` on this endpoint.","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"id_token":{"type":"string","description":"Open OpenID Connect identity token, provisioned if the openid scope was requested.","minLength":50,"maxLength":10240,"pattern":"^[a-zA-Z0-9_\\\\-\\\\.~=]+$"},"session_token":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"scope":{"type":"string","description":"A space-separated list of scope values held by the granted access token that the connecting client will be granted. The requested scope will be provided by the connecting client as part of its authorization request, but may be pruned by the user in a confirmation dialog before being sent to this endpoint."},"token_type":{"type":"string","description":"The type of token, which determins how the client should use it in subsequent requests. Currently only Bearer tokens are supported.","enum":["bearer"]},"expires_in":{"type":"number","description":"The number of seconds until the access token will expire."},"auth_at":{"type":"number","description":"The timestamp for the session at which the user last authenticated to FxA, in seconds since the epoch."},"keys_jwe":{"type":"string","maxLength":1024,"pattern":"^[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]*\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+\\\\.[A-Za-z0-9-_]+$"}},"required":["access_token","scope","token_type","expires_in","auth_at"]},"Model74":{"type":"object","properties":{"authPW":{"type":"string"}}},"Model75":{"type":"object","properties":{"email":{"type":"string","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"}}},"Model76":{"type":"object","properties":{"exists":{"type":"boolean"}},"required":["exists"]},"Model77":{"type":"object","properties":{"recoveryKeyId":{"type":"string","maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"}}},"Model78":{"type":"object","properties":{"email":{"type":"string","description":"The email address to delete.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"}},"required":["email"]},"Model79":{"type":"object","properties":{"email":{"type":"string","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"service":{"type":"string","description":"Opaque alphanumeric token to be included in verification links.","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"},"redirectTo":{"type":"string","maxLength":512},"resume":{"type":"string","description":"Opaque URL-encoded string to be included in the verification link as a query parameter.","maxLength":2048},"style":{"type":"string","enum":["trailhead"]},"type":{"type":"string","enum":["upgradeSession"],"maxLength":32,"x-format":{"alphanum":true}}}},"Model80":{"type":"object","properties":{"email":{"type":"string","description":"The new primary email address of the user.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"}},"required":["email"]},"Model81":{"type":"object","properties":{"uid":{"type":"string","maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"},"code":{"type":"string","minLength":32,"maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"},"service":{"type":"string","description":"Opaque alphanumeric token to be included in verification links.","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"},"reminder":{"type":"string","description":"Indicates that verification originates from a reminder email.","pattern":"^(?:first|second)$"},"type":{"type":"string","description":"The type of code being verified.","maxLength":32,"x-format":{"alphanum":true}},"style":{"type":"string","enum":["trailhead"]},"marketingOptIn":{"type":"boolean"},"newsletters":{"$ref":"#/components/schemas/newsletters"}},"required":["uid","code"]},"Model82":{"type":"object","properties":{"customSessionToken":{"type":"string","description":"Custom session token id to destroy.","minLength":64,"maxLength":64,"pattern":"^(?:[a-fA-F0-9]{2})+$"}}},"Model83":{"type":"object","properties":{"reason":{"type":"string","maxLength":16}}},"Model84":{"type":"object","properties":{"email":{"type":"string","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"authPW":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"service":{"type":"string","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"},"redirectTo":{"type":"string","maxLength":512},"resume":{"type":"string"},"reason":{"type":"string","maxLength":16},"unblockCode":{"type":"string","pattern":"^[a-zA-Z0-9]*$","x-constraint":{"length":8}},"metricsContext":{"$ref":"#/components/schemas/metricsContext"},"originalLoginEmail":{"type":"string","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"verificationMethod":{"type":"string","enum":["email","email-otp","email-2fa","email-captcha","totp-2fa"]}},"required":["email","authPW"]},"Model85":{"type":"object","properties":{"uid":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"keyFetchToken":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"verificationMethod":{"type":"string"},"verificationReason":{"type":"string"},"verified":{"type":"boolean"},"authAt":{"type":"integer"},"metricsEnabled":{"type":"boolean"}},"required":["uid","verified","metricsEnabled"]},"scopes":{"type":"array","default":[],"items":{"type":"string","maxLength":256,"pattern":"^[a-zA-Z0-9 _\\\\/.:-]*$"}},"Model86":{"type":"object","properties":{"code":{"type":"string","pattern":"^[0-9]+$"},"service":{"type":"string","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"},"scopes":{"$ref":"#/components/schemas/scopes"},"marketingOptIn":{"type":"boolean"},"newsletters":{"$ref":"#/components/schemas/newsletters"}}},"Model87":{"type":"object","properties":{"email":{"type":"string","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"productName":{"type":"string"},"productPlatform":{"type":"string"},"productVersion":{"type":"string"},"topic":{"type":"string"},"app":{"type":"string"},"subject":{"type":"string"},"message":{"type":"string"},"product":{"type":"string"},"category":{"type":"string"}},"required":["productName","topic","message"]},"Model88":{"type":"object","properties":{"success":{"type":"boolean"},"ticket":{"type":"number"},"error":{"type":"string"}},"required":["success"]},"Model89":{"type":"object","properties":{"metricsContext":{"$ref":"#/components/schemas/metricsContext"}}},"Model90":{"type":"object","properties":{"qrCodeUrl":{"type":"string"},"secret":{"type":"string"},"recoveryCodes":{"$ref":"#/components/schemas/authenticationMethods"}},"required":["qrCodeUrl","secret","recoveryCodes"]},"Model91":{"type":"object","properties":{"clientId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":16}},"sessionTokenId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$"},"refreshTokenId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"deviceId":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}}}},"Model92":{"type":"object","properties":{"id":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}}},"required":["id"]},"Model93":{"type":"object","properties":{"target":{"type":"string","description":"The id of the device on which to invoke the command.","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}},"command":{"type":"string","description":"The id of the command to be invoked, as found in the device\'s availableCommands set."},"payload":{"$ref":"#/components/schemas/availableCommands"},"ttl":{"type":"integer","description":"The time in milliseconds after which the command should expire, if not processed by the device.","minimum":0,"maximum":10000000}},"required":["target","command","payload"]},"Model94":{"type":"object","properties":{"enqueued":{"type":"boolean"},"notified":{"type":"boolean"},"notifyError":{"type":"string"}}},"excluded":{"type":"array","description":"Array of device ids to exclude from the notification. Ignored unless `to:\\"all\\"` is specified.","items":{"type":"string","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":32}}},"Model95":{"type":"object","properties":{"to":{"type":"string","description":"Devices to notify. String `\'all\'` or an array containing the relevant device ids.","enum":["all"]},"_endpointAction":{"type":"string","enum":["accountVerify"]},"excluded":{"$ref":"#/components/schemas/excluded"},"payload":{"$ref":"#/components/schemas/availableCommands"},"TTL":{"type":"integer","description":"Push notification TTL, defaults to `0`.","minimum":0}},"required":["to"]},"Model96":{"type":"object","properties":{"uid":{"type":"string","description":"The user id.","maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"},"unblockCode":{"type":"string","description":"Alphanumeric code used to unblock certain rate-limitings.","pattern":"^[a-zA-Z0-9]*$","x-constraint":{"length":8}}},"required":["uid","unblockCode"]},"Model97":{"type":"object","properties":{"email":{"type":"string","description":"The primary email for this account.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"metricsContext":{"$ref":"#/components/schemas/metricsContext"}},"required":["email"]},"Model98":{"type":"object","properties":{"priceId":{"type":"string","maxLength":255},"promotionCode":{"type":"string"}},"required":["priceId","promotionCode"]},"Model99":{"type":"object","properties":{"promotionCode":{"type":"string"},"type":{"type":"string"},"durationInMonths":{"type":"number"},"valid":{"type":"boolean"},"discountAmount":{"type":"number"},"expired":{"type":"boolean"},"maximallyRedeemed":{"type":"boolean"}},"required":["promotionCode","type","durationInMonths","valid","expired","maximallyRedeemed"]},"Model100":{"type":"object","properties":{"displayName":{"type":"string"},"idempotencyKey":{"type":"string"}},"required":["idempotencyKey"]},"invoices_settings":{"type":"object","properties":{"default_payment_method":{"type":"string"}}},"price":{"type":"object","properties":{"id":{"type":"string"}},"required":["id"]},"Model101":{"type":"object","properties":{"id":{"type":"string"},"created":{"type":"number"},"price":{"$ref":"#/components/schemas/price"}},"required":["id","created","price"]},"Model102":{"type":"array","items":{"$ref":"#/components/schemas/Model101"}},"items":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/Model102"}},"required":["data"]},"Model103":{"type":"object","properties":{"id":{"type":"string"},"cancel_at":{"type":"number","x-alternatives":[{"type":"number"},{"type":"string"}]},"canceled_at":{"type":"number","x-alternatives":[{"type":"number"},{"type":"string"}]},"cancel_at_period_end":{"type":"boolean"},"created":{"type":"number"},"current_period_end":{"type":"number"},"current_period_start":{"type":"number"},"ended_at":{"type":"number","x-alternatives":[{"type":"number"},{"type":"string"}]},"items":{"$ref":"#/components/schemas/items"},"latest_invoice":{"type":"string","x-alternatives":[{"type":"string"},{"$ref":"#/x-alt-definitions/latest_invoice"}]},"status":{"type":"string"}},"required":["id","cancel_at_period_end","created","current_period_end","current_period_start","status"]},"Model104":{"type":"array","items":{"$ref":"#/components/schemas/Model103"}},"Model105":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/Model104"}},"required":["data"]},"Model106":{"type":"object","properties":{"invoices_settings":{"$ref":"#/components/schemas/invoices_settings"},"subscriptions":{"$ref":"#/components/schemas/Model105"}}},"Model107":{"type":"object","properties":{"currencyCode":{"type":"string","x-convert":{"uppercase":true}}},"required":["currencyCode"]},"Model108":{"type":"object","properties":{"token":{"type":"string"}},"required":["token"]},"Model109":{"type":"object","properties":{"subscriptionId":{"type":"string","maxLength":255}},"required":["subscriptionId"]},"Model110":{"type":"object","properties":{"authPW":{"type":"string","description":"The PBKDF2/HKDF-stretched password as a hex string.","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"wrapKb":{"type":"string","description":"The new `wrapKb` value as a hex string.","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}},"sessionToken":{"type":"string","description":"Indicates whether a new `sessionToken` is required, default to `false`.","minLength":64,"maxLength":64,"pattern":"^(?:[a-fA-F0-9]{2})+$"}},"required":["authPW"]},"Model111":{"type":"object","properties":{"email":{"type":"string","description":"The primary email for this account.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"oldAuthPW":{"type":"string","description":"The PBKDF2/HKDF-stretched password as a hex string.","pattern":"^(?:[a-fA-F0-9]{2})+$","x-constraint":{"length":64}}},"required":["email","oldAuthPW"]},"Model112":{"type":"object","properties":{"email":{"type":"string","description":"Recovery email for the account.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"service":{"type":"string","description":"Identifies the relying service the user was interacting with that triggered the password reset.","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"},"redirectTo":{"type":"string","description":"URL that the client should be redirected to after handling the request.","maxLength":512},"resume":{"type":"string","description":"Opaque URL-encoded string to be included in the verification link as a query parameter.","maxLength":2048}},"required":["email"]},"Model113":{"type":"object","properties":{"passwordForgotToken":{"type":"string"},"ttl":{"type":"number"},"codeLength":{"type":"number"},"tries":{"type":"number"}}},"Model114":{"type":"object","properties":{"email":{"type":"string","description":"Recovery email for the account.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"service":{"type":"string","description":"Identifies the relying service the user was interacting with that triggered the password reset.","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"},"redirectTo":{"type":"string","description":"URL that the client should be redirected to after handling the request.","maxLength":512},"resume":{"type":"string","description":"Opaque URL-encoded string to be included in the verification link as a query parameter.","maxLength":2048},"metricsContext":{"$ref":"#/components/schemas/metricsContext"}},"required":["email"]},"Model115":{"type":"object","properties":{"code":{"type":"string","description":"The code sent to the user\'s recovery email.","minLength":32,"maxLength":32,"pattern":"^(?:[a-fA-F0-9]{2})+$"},"accountResetWithRecoveryKey":{"type":"boolean"}},"required":["code"]},"Model116":{"type":"object","properties":{"accountResetToken":{"type":"string"}}},"Model117":{"type":"object","properties":{"email":{"type":"string","description":"The secondary email address to verify.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"}},"required":["email"]},"Model118":{"type":"object","properties":{"email":{"type":"string","description":"The secondary email address to verify.","maxLength":255,"pattern":"^(?:[^\\\\u0000-\\\\u001F\\\\u007F\\\\u0080-\\\\u009F\\\\u2028-\\\\u2029\\\\uD800-\\\\uDFFF\\\\uE000-\\\\uF8FF\\\\uFFF9-\\\\uFFFC\\\\uFFFE-\\\\uFFFF])*$"},"code":{"type":"string","description":"Time based code to verify secondary email","maxLength":32,"pattern":"^[0-9]+$"}},"required":["email","code"]},"Model119":{"type":"object","properties":{"code":{"type":"string","description":"The TOTP code to check","maxLength":32,"pattern":"^[0-9]+$"},"service":{"type":"string","maxLength":16,"pattern":"^[a-zA-Z0-9\\\\-]*$"}},"required":["code"]},"Model120":{"type":"object","properties":{"success":{"type":"boolean"}},"required":["success"]},"Model121":{"type":"object","properties":{"priceId":{"type":"string"},"paymentMethodId":{"type":"string","maxLength":30},"promotionCode":{"type":"string"},"idempotencyKey":{"type":"string"},"metricsContext":{"$ref":"#/components/schemas/metricsContext"}},"required":["priceId","idempotencyKey"]},"Model122":{"type":"object","properties":{"subscription":{"$ref":"#/components/schemas/Model103"},"sourceCountry":{"type":"string","x-constraint":{"length":2}}},"required":["sourceCountry"]},"Model123":{"type":"object","properties":{"priceId":{"type":"string"},"promotionCode":{"type":"string"},"token":{"type":"string","maxLength":30},"idempotencyKey":{"type":"string"},"metricsContext":{"$ref":"#/components/schemas/metricsContext"}},"required":["priceId","idempotencyKey"]},"message":{"type":"object","properties":{"data":{"type":"string"}},"required":["data"]},"Model124":{"type":"object","properties":{"message":{"$ref":"#/components/schemas/message"}},"required":["message"]},"Model125":{"type":"object","properties":{"priceId":{"type":"string","maxLength":255},"promotionCode":{"type":"string"}},"required":["priceId"]},"Model126":{"type":"object","properties":{"amount":{"type":"number"},"currency":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"}},"required":["amount","currency","id","name"]},"line_items":{"type":"array","items":{"$ref":"#/components/schemas/Model126"}},"tax":{"type":"object","properties":{"amount":{"type":"number"},"inclusive":{"type":"boolean"},"name":{"type":"string"},"percentage":{"type":"number"}},"required":["amount","inclusive","name","percentage"]},"discount":{"type":"object","properties":{"amount":{"type":"number"},"amount_off":{"type":"number"},"percent_off":{"type":"number"}},"required":["amount","amount_off","percent_off"]},"Model127":{"type":"object","properties":{"line_items":{"$ref":"#/components/schemas/line_items"},"subtotal":{"type":"number"},"total":{"type":"number"},"tax":{"$ref":"#/components/schemas/tax"},"discount":{"$ref":"#/components/schemas/discount"}},"required":["line_items","subtotal","total"]},"Model128":{"type":"object","properties":{"invoiceId":{"type":"string"},"paymentMethodId":{"type":"string","maxLength":30},"idempotencyKey":{"type":"string"}},"required":["invoiceId","paymentMethodId","idempotencyKey"]},"Model129":{"type":"object","properties":{"id":{"type":"string"},"payment_intent":{"type":"string","x-alternatives":[{"type":"string"},{"$ref":"#/x-alt-definitions/payment_intent"}]}},"required":["id"]},"Model130":{"type":"object","properties":{"token":{"type":"string","maxLength":30}},"required":["token"]},"Model131":{"type":"object","properties":{"paymentMethodId":{"type":"string","maxLength":30}},"required":["paymentMethodId"]},"Model132":{"type":"object","properties":{"client_secret":{"type":"string"},"created":{"type":"number"},"payment_method":{"type":"string","x-alternatives":[{"type":"string"},{"$ref":"#/x-alt-definitions/payload"}]},"source":{"type":"string","optional":["source","source"],"x-alternatives":[{"type":"string"},{"type":"string"}]},"status":{"type":"string"}},"required":["created","status"]},"Model133":{"type":"object","properties":{"sku":{"type":"string"},"token":{"type":"string"}},"required":["sku","token"]},"Model134":{"type":"object","properties":{"id":{"type":"string","maxLength":30}},"required":["id"]},"Model135":{"type":"object","properties":{"success":{"type":"boolean"}}},"Model136":{"type":"object","properties":{"planId":{"type":"string","maxLength":255}},"required":["planId"]}}}}}')}}]);