"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[7553],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return d}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},s=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=p(t),d=o,m=u["".concat(l,".").concat(d)]||u[d]||f[d]||i;return t?n.createElement(m,c(c({ref:r},s),{},{components:t})):n.createElement(m,c({ref:r},s))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=u;var a={};for(var l in r)hasOwnProperty.call(r,l)&&(a[l]=r[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var p=2;p<i;p++)c[p]=t[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},85973:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var n=t(87462),o=t(63366),i=(t(67294),t(3905)),c=["components"],a={title:"Mobile Specifics"},l=void 0,p={unversionedId:"reference/mobile-specifics",id:"reference/mobile-specifics",title:"Mobile Specifics",description:"Firefox for iOS",source:"@site/docs/reference/mobile-specifics.md",sourceDirName:"reference",slug:"/reference/mobile-specifics",permalink:"/ecosystem-platform/reference/mobile-specifics",editUrl:"https://github.com/mozilla/ecosystem-platform/edit/main/website/docs/reference/mobile-specifics.md",tags:[],version:"current",frontMatter:{title:"Mobile Specifics"},sidebar:"docs",previous:{title:"Scheduled Maintenance",permalink:"/ecosystem-platform/reference/scheduled-maintenance"},next:{title:"Architectural Decision Records",permalink:"/ecosystem-platform/reference/architectural-decision-records"}},s=[{value:"Firefox for iOS",id:"firefox-for-ios",children:[],level:3},{value:"Android debugging",id:"android-debugging",children:[],level:3}],f={toc:s};function u(e){var r=e.components,t=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"firefox-for-ios"},"Firefox for iOS"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Skip this if you are not working on Firefox for iOS and FxA.")),(0,i.kt)("p",null,"You can test sync locally in Firefox iOS using the XCode simulator.\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mozilla/firefox-ios"},"Follow the steps at github.com/mozilla/firefox-ios and setup ",(0,i.kt)("em",{parentName:"a"},"firefox-ios")," ")," build locally.\nCurrently there is no way to dynamically switch servers in Firefox for iOS, to use ",(0,i.kt)("strong",{parentName:"p"},"local")," servers you need to run the script below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"FIREFOX_IOS_HOME=<path_to_firefox_ios_project> npm run config-fxios\n")),(0,i.kt)("p",null,"After the script you need to rebuild ",(0,i.kt)("em",{parentName:"p"},"firefox-ios"),"."),(0,i.kt)("h3",{id:"android-debugging"},"Android debugging"),(0,i.kt)("p",null,"The following technique works with any Android application and can also be used for Firefox for Android."),(0,i.kt)("p",null,"Simply forward the following ports from the host machine to the Android device:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm run adb-reverse\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"adb reverse tcp:3030 tcp:3030 # Content server\nadb reverse tcp:9000 tcp:9000 # Auth server\nadb reverse tcp:9010 tcp:9010 # OAuth server\nadb reverse tcp:1111 tcp:1111 # Profile server\nadb reverse tcp:5000 tcp:5000 # Sync server\n")),(0,i.kt)("p",null,"Then run ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn start")," and get to work!"))}u.isMDXComponent=!0}}]);