"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[9157],{88761:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>y,Bullet:()=>c,Details:()=>m,SpecifiedBy:()=>p,assets:()=>i,contentTitle:()=>r,default:()=>b,frontMatter:()=>n,metadata:()=>s,toc:()=>g});var o=a(87462),l=a(67294),d=a(3905);a(8209);const n={id:"verify-totp-payload",title:"VerifyTotpPayload",hide_table_of_contents:!1},r=void 0,s={unversionedId:"gql-api/objects/verify-totp-payload",id:"gql-api/objects/verify-totp-payload",title:"VerifyTotpPayload",description:"No description",source:"@site/docs/gql-api/objects/verify-totp-payload.mdx",sourceDirName:"gql-api/objects",slug:"/gql-api/objects/verify-totp-payload",permalink:"/ecosystem-platform/gql-api/objects/verify-totp-payload",draft:!1,editUrl:"https://github.com/mozilla/ecosystem-platform/edit/master/docs/gql-api/objects/verify-totp-payload.mdx",tags:[],version:"current",frontMatter:{id:"verify-totp-payload",title:"VerifyTotpPayload",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"UpdateDisplayNamePayload",permalink:"/ecosystem-platform/gql-api/objects/update-display-name-payload"},next:{title:"accountStatus",permalink:"/ecosystem-platform/gql-api/queries/account-status"}},i={},c=()=>(0,d.kt)(l.Fragment,null,(0,d.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,d.kt)(l.Fragment,null,"Specification",(0,d.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),y=e=>(0,d.kt)(l.Fragment,null,(0,d.kt)("span",{className:e.class},e.text)),g=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>VerifyTotpPayload.<b>clientMutationId</b></code><Bullet /><code>String</code> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-verifytotppayloadbclientmutationidbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>VerifyTotpPayload.<b>success</b></code><Bullet /><code>Boolean!</code> <Badge class="badge badge--secondary" text="non-null"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-verifytotppayloadbsuccessbcodeboolean--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>VerifyTotpPayload.<b>recoveryCodes</b></code><Bullet /><code>[String!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="scalar"/>',id:"code-style-fontweight-normal-verifytotppayloadbrecoverycodesbcodestring--",level:4},{value:"Returned by",id:"returned-by",level:3}],m=e=>{let{dataOpen:t,dataClose:a,children:n,startOpen:r=!1}=e;const[s,i]=(0,l.useState)(r);return(0,d.kt)("details",(0,o.Z)({},s?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,d.kt)("summary",{onClick:e=>{e.preventDefault(),i((e=>!e))},style:{listStyle:"none"}},s?t:a),s&&n)},f={Bullet:c,SpecifiedBy:p,Badge:y,toc:g,Details:m},u="wrapper";function b(e){let{components:t,...a}=e;return(0,d.kt)(u,(0,o.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,d.kt)("p",null,"No description"),(0,d.kt)("pre",null,(0,d.kt)("code",{parentName:"pre",className:"language-graphql"},"type VerifyTotpPayload {\n  clientMutationId: String\n  success: Boolean!\n  recoveryCodes: [String!]\n}\n")),(0,d.kt)("h3",{id:"fields"},"Fields"),(0,d.kt)("h4",{id:"code-style-fontweight-normal-verifytotppayloadbclientmutationidbcodestring-"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"VerifyTotpPayload.",(0,d.kt)("b",null,"clientMutationId"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/gql-api/scalars/string"},(0,d.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,d.kt)(y,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"A unique identifier for the client performing the mutation.")),(0,d.kt)("h4",{id:"code-style-fontweight-normal-verifytotppayloadbsuccessbcodeboolean--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"VerifyTotpPayload.",(0,d.kt)("b",null,"success"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/gql-api/scalars/boolean"},(0,d.kt)("inlineCode",{parentName:"a"},"Boolean!"))," ",(0,d.kt)(y,{class:"badge badge--secondary",text:"non-null",mdxType:"Badge"})," ",(0,d.kt)(y,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null),(0,d.kt)("h4",{id:"code-style-fontweight-normal-verifytotppayloadbrecoverycodesbcodestring--"},(0,d.kt)("a",{parentName:"h4",href:"#"},(0,d.kt)("code",{style:{fontWeight:"normal"}},"VerifyTotpPayload.",(0,d.kt)("b",null,"recoveryCodes"))),(0,d.kt)(c,{mdxType:"Bullet"}),(0,d.kt)("a",{parentName:"h4",href:"/gql-api/scalars/string"},(0,d.kt)("inlineCode",{parentName:"a"},"[String!]"))," ",(0,d.kt)(y,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,d.kt)(y,{class:"badge badge--secondary",text:"scalar",mdxType:"Badge"})),(0,d.kt)("blockquote",null),(0,d.kt)("h3",{id:"returned-by"},"Returned by"),(0,d.kt)("p",null,(0,d.kt)("a",{parentName:"p",href:"/gql-api/mutations/verify-totp"},(0,d.kt)("inlineCode",{parentName:"a"},"verifyTotp")),"  ",(0,d.kt)(y,{class:"secondary",text:"mutation",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);